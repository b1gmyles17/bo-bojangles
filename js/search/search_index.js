var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AiArtCommand.html",[0,0.065,1,2.878]],["body/classes/AiArtCommand.html",[0,0.09,1,4.824,2,2.161,3,0.321,4,0.26,5,0.23,6,2.409,7,3.33,8,5.18,9,0.935,10,0.018,11,2.925,12,1.765,13,1.949,14,4.043,15,2.888,16,2.768,17,2.552,18,4.453,19,4.043,20,3.974,21,3.092,22,4.453,23,0.845,24,2.552,25,1.949,26,1.682,27,1.949,28,2.28,29,2.409,30,1.855,31,3.616,32,0.29,33,0.015,34,0.015]],["title/injectables/AiArtModel.html",[35,0.579,36,2.412]],["body/injectables/AiArtModel.html",[0,0.063,3,0.225,4,0.182,5,0.161,7,3.953,9,0.849,10,0.019,23,0.931,25,2.148,26,1.178,27,1.879,28,2.197,29,2.322,30,2.444,32,0.203,33,0.012,34,0.012,35,0.771,36,3.21,37,1.178,38,5.286,39,3.629,40,0.366,41,1.545,42,1.325,43,2.386,44,2.784,45,4.379,46,1.123,47,2.784,48,5.112,49,1.144,50,3.629,51,1.325,52,0.536,53,1.202,54,4.292,55,1.134,56,3.629,57,1.813,58,4.993,59,5.286,60,4.717,61,3.21,62,3.21,63,3.21,64,2.98,65,2.314,66,4.993,67,2.784,68,4.292,69,2.784,70,3.629,71,2.333,72,0.802,73,2.784,74,2.533,75,2.784,76,3.119,77,2.533,78,2.784,79,1.178,80,1.545,81,1.879,82,2.784,83,3.629,84,2.784,85,2.784,86,2.784,87,1.787,88,1.178,89,1.688,90,2.784,91,3.629]],["title/interfaces/AiStoryChoices.html",[92,1.106,93,2.619]],["body/interfaces/AiStoryChoices.html",[3,0.261,4,0.212,5,0.187,10,0.019,30,1.511,32,0.366,33,0.013,34,0.013,40,0.684,52,0.638,55,1.187,92,1.817,93,4.301,94,1.857,95,2.946,96,2.946,97,0.95,98,5.015,99,5.015,100,3.385,101,3.295,102,2.712,103,2.687,104,3.645,105,2.52,106,2.52,107,3.903,108,2.353,109,2.52,110,2.52,111,2.52,112,2.713,113,2.946,114,2.946,115,2.946,116,2.946,117,2.946,118,2.946,119,2.713,120,2.52,121,2.713,122,2.52,123,2.946]],["title/classes/AiStoryCommand.html",[0,0.065,124,2.878]],["body/classes/AiStoryCommand.html",[0,0.093,2,2.221,3,0.33,4,0.267,5,0.236,6,2.476,9,0.883,10,0.018,11,2.973,12,1.814,13,2.003,23,0.868,24,3.149,26,1.728,27,2.003,29,2.476,31,3.716,32,0.298,33,0.015,34,0.015,124,4.905,125,2.968,126,5.324,127,4.11,128,4.084,129,3.178,130,4.576,131,3.565,132,5.324]],["title/injectables/AiStoryModel.html",[35,0.579,133,2.412]],["body/injectables/AiStoryModel.html",[0,0.056,3,0.199,4,0.161,5,0.143,9,0.851,10,0.019,23,0.872,26,1.045,27,1.727,30,2.208,32,0.18,33,0.011,34,0.011,35,0.709,37,1.045,38,5.015,40,0.324,41,1.42,42,1.286,43,2.296,45,4.104,46,1.42,47,2.468,48,4.919,49,1.072,51,1.242,52,0.503,53,1.127,55,1.046,57,1.504,64,2.74,65,1.727,69,2.468,71,2.068,72,0.712,73,2.468,74,2.246,77,2.246,79,1.49,80,1.42,81,1.211,82,2.468,84,2.468,85,2.468,86,2.468,87,2.261,88,1.737,89,1.496,90,2.468,100,1.496,103,2.939,104,1.794,108,1.794,112,2.95,113,2.246,114,2.246,115,2.246,116,2.246,117,2.246,118,2.246,119,2.068,123,2.246,125,3.253,131,3.68,133,2.95,134,3.218,135,4.59,136,5.674,137,3.218,138,3.218,139,2.74,140,4.59,141,3.218,142,4.59,143,3.945,144,4.59,145,3.204,146,3.521,147,3.945,148,4.59,149,3.521,150,2.95,151,2.766,152,1.921,153,1.564,154,4.59,155,4.59,156,3.218,157,3.218,158,2.068,159,2.766,160,3.218,161,3.218,162,3.218,163,3.218,164,3.218,165,3.218,166,3.218,167,3.218]],["title/interfaces/AiStoryRequest.html",[92,1.106,112,2.412]],["body/interfaces/AiStoryRequest.html",[3,0.247,4,0.2,5,0.177,10,0.019,30,2.289,32,0.358,33,0.013,34,0.013,40,0.537,52,0.676,55,1.141,92,1.767,93,3.715,94,1.755,95,2.783,96,2.783,97,0.915,98,3.059,99,3.059,100,3.187,101,3.36,102,1.755,103,2.879,104,3.565,105,2.38,106,2.38,107,3.816,108,2.223,109,2.38,110,2.38,111,2.38,112,3.422,113,4.463,114,4.463,115,4.463,116,4.463,117,4.463,118,4.463,119,2.563,120,2.38,121,2.563,122,2.38,123,2.783]],["title/interfaces/AiStoryResponse.html",[92,1.106,119,2.412]],["body/interfaces/AiStoryResponse.html",[3,0.26,4,0.21,5,0.186,10,0.019,30,1.5,32,0.365,33,0.013,34,0.013,40,0.555,52,0.653,55,1.185,92,1.811,93,4.551,94,1.844,95,2.925,96,2.925,97,0.946,98,3.214,99,3.214,100,3.232,101,3.253,102,1.844,103,2.905,104,3.635,105,2.501,106,2.501,107,3.892,108,2.336,109,2.501,110,2.501,111,2.501,112,2.694,113,2.925,114,2.925,115,2.925,116,2.925,117,2.925,118,2.925,119,3.536,120,3.892,121,4.191,122,3.892,123,4.551]],["title/injectables/AiStoryService.html",[35,0.579,168,2.412]],["body/injectables/AiStoryService.html",[0,0.061,3,0.217,4,0.175,5,0.155,9,0.878,10,0.019,23,0.794,27,1.316,32,0.196,33,0.012,34,0.012,35,0.752,37,1.135,40,0.353,41,1.506,42,1.212,43,2.004,46,1.506,49,1.122,51,1.13,52,0.457,53,1.025,55,0.987,57,0.983,65,1.832,72,0.773,77,2.441,79,2.066,80,1.082,81,1.316,88,1.135,97,0.837,103,2.807,125,3.548,131,3.375,133,4.235,139,2.087,145,3.397,150,3.891,153,2.168,168,3.599,169,6.053,170,3.497,171,3.375,172,3.733,173,3.497,174,3.143,175,4.867,176,4.867,177,3.497,178,1.459,179,1.385,180,2.335,181,4.867,182,2.263,183,1.459,184,1.385,185,3.129,186,2.682,187,3.006,188,3.006,189,3.006,190,2.815,191,4.09,192,2.815,193,3.599,194,2.525,195,3.006,196,2.603,197,1.829,198,3.129,199,3.006,200,1.316,201,2.248,202,3.497,203,2.248,204,2.248,205,2.248,206,1.722,207,2.087,208,2.682,209,3.497]],["title/injectables/AmqpService.html",[35,0.579,210,2.619]],["body/injectables/AmqpService.html",[0,0.054,3,0.191,4,0.155,5,0.137,9,0.615,10,0.019,23,1.031,26,1.002,32,0.173,33,0.011,34,0.011,35,0.688,37,1.002,40,0.311,41,1.378,42,1.332,43,2.434,46,1.378,49,1.216,51,1.468,52,0.612,53,1.205,55,1.108,57,1.469,65,2.38,72,0.682,79,1.002,80,1.378,81,2.631,87,1.52,88,2.166,89,1.435,97,0.766,101,1.96,153,1.95,178,1.287,179,1.222,180,1.287,194,1.287,210,3.109,211,3.086,212,5.227,213,4.454,214,4.454,215,4.454,216,3.086,217,6.323,218,4.454,219,4.454,220,3.086,221,5.217,222,4.919,223,4.454,224,6.069,225,3.086,226,4.454,227,3.086,228,4.454,229,4.454,230,6.519,231,4.454,232,5.723,233,4.454,234,2.367,235,1.984,236,5.227,237,5.227,238,3.086,239,3.086,240,4.454,241,3.086,242,5.227,243,5.227,244,5.227,245,3.829,246,2.652,247,4.454,248,4.454,249,3.086,250,3.086,251,3.086,252,3.086,253,3.086,254,1.52,255,3.086,256,3.086,257,3.086,258,2.367,259,3.086,260,3.086,261,1.614]],["title/modules/AppModule.html",[262,1.279,263,2.619]],["body/modules/AppModule.html",[0,0.055,3,0.196,4,0.159,5,0.14,9,1.013,10,0.019,12,1.079,13,1.191,32,0.177,33,0.011,34,0.011,52,0.297,72,0.7,136,6.155,152,1.889,183,1.32,184,1.253,193,2.034,234,2.428,235,2.034,254,2.852,262,1.546,263,5.099,264,1.393,265,1.996,266,2.72,267,2.72,268,2.72,269,4.1,270,3.336,271,3.807,272,3.807,273,3.807,274,4.1,275,2.234,276,1.559,277,1.472,278,3.165,279,2.529,280,3.556,281,2.72,282,3.165,283,4.536,284,2.72,285,4.278,286,3.165,287,2.428,288,2.72,289,2.209,290,3.165,291,4.536,292,1.559,293,3.165,294,4.536,295,3.165,296,2.209,297,2.373,298,2.428,299,3.165,300,2.72,301,2.72,302,2.72,303,4.536,304,3.165,305,5.79,306,3.479,307,3.165,308,5.79,309,3.165,310,2.72,311,3.165,312,3.165,313,3.165,314,3.165,315,2.428,316,3.165,317,3.165,318,2.72,319,3.165,320,3.165,321,3.165,322,3.165,323,3.165,324,3.165,325,2.428,326,3.165,327,3.165,328,2.209,329,3.165,330,2.72,331,3.165,332,3.165,333,3.165,334,3.165,335,2.209,336,3.165,337,3.165]],["title/injectables/BotGateway.html",[35,0.579,274,2.412]],["body/injectables/BotGateway.html",[0,0.047,3,0.331,4,0.134,5,0.119,9,0.79,10,0.019,12,1.639,13,1.007,23,0.784,28,1.178,32,0.15,33,0.01,34,0.01,35,0.619,37,0.869,40,0.27,41,1.241,42,1.291,43,1.722,46,1.241,49,1.147,51,1.117,52,0.502,53,1.013,57,1.352,60,2.053,65,1.509,67,2.236,72,0.592,79,1.951,80,1.241,81,1.81,88,1.562,97,0.689,102,1.178,153,2.048,171,3.35,174,2.795,178,1.116,179,1.06,180,2.388,182,1.865,183,1.116,184,1.06,190,2.898,192,2.898,193,3.092,194,2.673,196,2.898,206,3.156,207,1.597,274,2.578,292,1.318,338,2.676,339,4.011,340,4.811,341,5.343,342,2.053,343,4.811,344,4.099,345,3.69,346,2.632,347,4.011,348,4.011,349,2.37,350,4.011,351,2.676,352,3.69,353,2.676,354,6.009,355,5.356,356,4.011,357,2.676,358,4.011,359,2.676,360,4.011,361,4.011,362,2.676,363,2.3,364,3.077,365,3.448,366,1.72,367,6.674,368,4.011,369,2.676,370,1.868,371,2.676,372,2.676,373,2.676,374,3.448,375,2.676,376,1.868,377,2.676,378,2.676,379,2.676,380,3.448,381,2.676,382,2.676,383,2.676,384,2.676,385,2.676,386,2.676,387,2.3,388,2.676,389,2.676,390,3.358,391,2.676,392,2.676,393,2.053,394,4.135,395,2.799,396,2.676,397,2.3,398,2.676,399,2.676,400,1.868,401,2.053,402,4.011,403,2.676,404,2.676,405,2.676,406,2.676,407,2.676,408,1.597,409,2.676,410,2.3,411,2.676,412,2.676,413,2.3,414,2.3,415,2.3,416,2.053,417,1.868]],["title/injectables/CogView2Command.html",[14,2.412,35,0.579]],["body/injectables/CogView2Command.html",[0,0.041,3,0.274,4,0.117,5,0.104,6,2.315,9,0.847,10,0.019,11,3.095,12,1.231,13,0.878,14,2.323,15,3.59,16,3.156,17,2.653,23,0.929,24,2.178,25,2.144,26,1.993,27,0.878,28,1.59,29,2.056,30,2.039,32,0.131,33,0.009,34,0.009,35,0.558,37,0.758,40,0.235,41,1.118,42,1.132,43,1.583,46,1.54,49,0.886,51,1.25,52,0.339,53,0.761,57,0.656,61,1.5,62,1.5,63,2.323,64,1.393,65,1.36,67,1.301,72,0.799,79,1.849,81,2.144,87,2.452,88,1.173,97,0.621,103,1.971,153,1.941,171,2.776,174,2.855,178,0.973,179,0.924,180,1.507,182,1.68,183,0.973,184,0.924,190,1.68,191,3.2,192,1.68,194,1.844,196,1.68,200,1.36,201,2.323,203,1.5,204,1.5,205,1.5,206,1.78,207,1.393,261,3.368,346,2.806,366,1.5,376,1.629,390,1.629,400,3.086,408,1.393,417,1.629,418,3.475,419,2.334,420,2.772,421,3.106,422,3.086,423,2.006,424,3.946,425,3.613,426,4.979,427,3.106,428,3.613,429,3.106,430,3.613,431,1.79,432,3.819,433,4.28,434,3.819,435,2.334,436,3.613,437,3.613,438,3.759,439,3.613,440,3.613,441,3.613,442,3.613,443,1.79,444,2.772,445,2.772,446,2.772,447,1.79,448,2.522,449,1.629,450,2.334,451,2.006,452,2.334,453,1.629,454,1.629,455,2.006,456,1.629,457,1.78,458,1.301,459,2.323,460,2.323,461,2.522,462,1.393,463,2.334,464,2.334,465,2.334,466,2.334,467,2.334,468,2.334,469,2.006,470,1.629,471,1.79,472,1.149,473,3.613,474,2.522,475,2.006,476,2.323,477,2.522,478,2.334,479,3.801,480,2.334,481,2.006,482,2.006,483,1.79,484,2.006,485,2.006,486,2.006,487,2.006,488,2.006,489,2.006,490,2.334,491,1.79,492,1.79,493,1.79,494,2.006,495,1.79,496,1.629,497,1.629,498,1.629,499,1.79]],["title/classes/CogView2CommandDto.html",[0,0.065,432,2.878]],["body/classes/CogView2CommandDto.html",[0,0.065,2,1.546,3,0.23,4,0.186,5,0.165,6,2.684,9,0.512,10,0.019,11,2.356,12,1.263,13,1.395,15,3.218,16,3.021,17,2.843,23,0.826,25,2.335,26,2.109,27,1.907,30,2.458,32,0.284,33,0.012,34,0.012,40,0.374,42,1.278,49,1.015,52,0.583,55,0.826,87,2.843,97,0.871,200,2.724,254,3.304,258,3.886,261,1.939,349,2.496,418,4.029,432,3.886,438,3.536,453,3.536,454,3.536,469,4.355,500,3.186,501,2.843,502,2.843,503,3.988,504,4.759,505,3.706,506,3.706,507,3.706,508,3.186,509,3.706,510,3.886,511,3.186,512,4.355,513,2.65,514,2.496,515,2.65,516,2.65,517,2.65,518,2.65,519,2.65,520,2.65,521,2.65,522,2.65,523,3.706,524,3.706]],["title/injectables/CogView2Model.html",[35,0.579,525,2.412]],["body/injectables/CogView2Model.html",[0,0.059,3,0.209,4,0.169,5,0.15,9,0.822,10,0.019,16,3.005,17,2.933,23,0.894,30,2.247,32,0.188,33,0.011,34,0.011,35,0.732,37,1.093,40,0.34,41,1.466,42,1.301,43,2.33,44,3.059,45,4.208,46,1.042,47,2.583,48,4.993,49,1.099,51,1.273,52,0.515,53,1.155,54,2.895,55,1.061,57,1.333,65,2.241,69,2.583,71,2.165,72,0.745,73,4.208,74,2.351,78,2.583,79,1.093,80,1.466,81,2.241,82,3.636,84,2.583,85,2.583,86,2.583,88,1.781,89,1.566,90,2.583,139,2.83,145,4.156,180,1.977,200,2.773,254,1.659,258,2.583,261,2.48,458,1.878,514,1.659,525,3.047,526,5.954,527,3.368,528,3.368,529,3.368,530,3.368,531,1.878,532,2.643,533,1.878,534,1.878,535,2.895,536,4.741,537,3.368,538,2.01,539,2.165,540,3.368,541,3.368,542,2.01,543,2.01,544,2.01,545,3.368,546,2.895,547,2.83,548,3.368,549,3.368,550,3.368,551,1.878,552,3.368,553,2.895,554,3.368,555,3.368,556,3.368]],["title/classes/CogView2Response.html",[0,0.065,531,2.092]],["body/classes/CogView2Response.html",[0,0.059,2,1.413,3,0.21,4,0.17,5,0.15,10,0.019,23,0.552,32,0.383,33,0.012,34,0.012,40,0.342,41,1.473,42,1.39,44,3.328,46,1.048,49,1.26,51,0.786,52,0.613,53,0.713,55,1.225,57,0.952,80,1.473,89,3.275,92,1.76,97,0.818,101,2.948,102,1.491,200,1.791,472,2.345,513,1.772,514,1.669,515,1.772,516,1.772,517,1.772,518,1.772,519,1.772,520,1.772,521,1.772,522,1.772,531,2.654,532,1.889,533,3.506,534,1.889,538,2.022,542,2.022,543,2.022,544,2.022,547,2.841,551,2.654,557,2.022,558,4.379,559,3.837,560,3.06,561,3.999,562,4.76,563,3.388,564,3.388,565,3.388,566,3.328,567,2.022,568,1.669,569,2.178,570,2.178,571,3.06,572,2.178,573,3.06,574,2.178,575,2.178,576,2.841]],["title/injectables/CogView2Service.html",[35,0.579,424,2.412]],["body/injectables/CogView2Service.html",[0,0.053,3,0.274,4,0.153,5,0.136,9,0.951,10,0.019,16,3.03,17,2.977,23,0.721,25,1.149,27,1.149,28,1.344,30,2.163,32,0.171,33,0.011,34,0.011,35,0.683,37,0.991,40,0.308,41,1.367,42,1.152,43,1.86,46,1.367,49,1.041,51,1.026,52,0.415,53,0.931,55,0.928,57,0.858,65,1.663,67,1.702,72,0.675,79,2.109,80,0.944,81,1.955,88,1.687,97,0.76,139,1.822,145,3.085,153,2.214,171,3.175,172,3.985,174,3.022,178,1.274,179,1.209,180,2.375,182,2.056,183,1.274,184,1.209,185,2.841,186,2.342,189,2.624,190,2.648,191,3.885,192,2.648,193,2.841,194,2.375,195,2.624,196,2.416,197,1.597,198,2.841,199,2.624,200,2.625,201,1.963,203,1.963,204,1.963,205,1.963,206,1.504,207,1.822,208,2.342,297,1.597,298,2.342,346,3.103,349,1.504,366,1.963,394,3.799,423,2.624,424,2.841,457,3.278,461,2.131,477,2.131,525,4.177,535,2.624,568,1.504,577,5.695,578,3.053,579,4.42,580,2.624,581,4.42,582,3.053,583,4.42,584,2.624,585,3.053,586,2.624,587,1.963,588,2.624,589,2.624,590,3.053,591,3.053,592,3.053,593,3.053,594,3.053,595,3.053]],["title/injectables/Collage.html",[35,0.579,457,1.848]],["body/injectables/Collage.html",[0,0.108,3,0.2,4,0.162,5,0.143,9,0.807,10,0.019,12,1.992,23,1.047,25,1.215,26,1.74,32,0.181,33,0.011,34,0.011,35,0.711,37,1.048,40,0.326,41,1.424,42,1.224,43,1.919,49,1.171,51,1.068,52,0.549,53,0.969,55,0.953,57,1.643,59,5.023,60,4.738,65,1.732,68,5.023,72,0.714,75,4.482,77,2.254,79,1.74,80,1.424,81,1.215,87,2.267,88,1.494,97,0.791,153,1.827,159,5.023,178,1.92,179,1.822,180,1.347,292,1.591,364,4.113,410,2.776,453,2.254,454,2.254,457,3.51,477,4.079,596,3.23,597,4.602,598,4.602,599,4.113,600,5.361,601,5.844,602,4.602,603,4.602,604,4.602,605,3.23,606,4.602,607,4.602,608,4.602,609,3.23,610,4.602,611,5.844,612,4.602,613,3.23,614,4.602,615,4.602,616,4.602,617,5.844,618,4.602,619,4.602,620,3.956,621,4.602,622,3.23,623,3.23,624,2.776,625,3.23,626,3.23,627,3.23,628,3.23,629,3.23,630,3.23,631,3.23,632,3.23,633,3.23,634,3.23]],["title/modules/CommandsModule.html",[262,1.279,269,2.412]],["body/modules/CommandsModule.html",[0,0.067,1,3.985,3,0.238,4,0.193,5,0.171,7,2.472,9,1.006,10,0.019,12,1.311,13,1.447,14,4.359,16,2.286,17,1.895,18,3.306,19,4.359,21,2.296,22,3.306,24,3.241,25,1.447,28,1.693,29,1.789,32,0.215,33,0.013,34,0.013,72,0.851,100,1.789,124,3.985,125,2.144,127,4.359,129,2.296,130,3.306,152,2.296,262,1.771,264,1.693,265,2.286,269,4.819,270,3.548,272,4.048,275,2.559,276,1.895,277,1.789,279,2.897,280,2.897,281,3.306,285,3.626,296,2.685,301,3.306,418,2.685,635,3.306,636,3.846,637,3.306,638,4.733,639,3.846,640,3.846,641,2.95,642,3.846,643,2.472,644,3.846,645,3.846,646,2.296,647,3.846]],["title/classes/CouldNotGenerateArtException.html",[0,0.065,185,2.412]],["body/classes/CouldNotGenerateArtException.html",[0,0.086,2,2.05,3,0.305,4,0.246,5,0.218,10,0.019,23,0.801,25,1.85,27,1.85,29,2.286,30,2.476,32,0.275,33,0.015,34,0.015,42,1.161,46,1.521,49,0.985,51,1.141,52,0.462,53,1.035,55,1.22,139,2.934,185,3.915,200,2.726,206,3,648,4.916,649,5.235,650,6.09,651,4.916,652,6.09,653,4.916]],["title/classes/CreateJobInput.html",[0,0.065,654,2.412]],["body/classes/CreateJobInput.html",[0,0.087,2,2.074,3,0.308,4,0.249,5,0.221,10,0.018,28,2.927,32,0.278,33,0.015,34,0.015,40,0.501,49,1.391,52,0.652,53,1.53,55,1.212,97,1.054,401,5.102,654,3.943,655,7.133,656,4.274,657,4.643,658,4.643,659,4.972,660,4.274,661,4.972,662,4.972]],["title/injectables/DalleMiniCommand.html",[19,2.412,35,0.579]],["body/injectables/DalleMiniCommand.html",[0,0.049,3,0.307,4,0.141,5,0.125,6,2.544,9,0.897,10,0.019,11,2.544,12,1.416,13,1.056,19,2.671,20,4.854,21,3.486,23,0.952,24,2.437,25,2.058,26,1.776,27,1.056,28,1.235,29,1.305,30,1.958,32,0.157,33,0.01,34,0.01,35,0.642,37,0.911,40,0.283,41,1.285,42,1.113,43,1.771,46,1.285,49,0.991,51,1.149,52,0.39,53,0.875,57,0.789,61,2.671,62,2.671,63,4.266,64,1.675,65,1.564,67,1.564,72,0.919,79,1.985,81,2.198,88,1.606,97,0.714,103,1.645,153,2.084,171,3.05,174,2.943,178,1.17,179,1.111,180,1.733,182,1.932,183,1.17,184,1.111,190,1.932,192,1.932,194,2.064,196,1.932,201,2.671,203,1.804,204,1.804,205,1.804,207,1.675,345,3.187,346,2.694,366,1.804,376,1.959,390,1.959,400,1.959,408,1.675,417,1.959,422,3.454,431,2.152,433,4.253,434,4.196,438,2.9,443,2.152,444,3.187,445,3.187,446,3.187,447,2.152,448,2.9,449,1.959,456,1.959,457,2.047,458,1.564,459,2.671,460,2.671,462,1.675,470,1.959,471,2.152,472,1.382,474,2.9,475,2.412,476,2.671,479,4.253,481,2.412,482,2.412,483,2.152,484,2.412,485,2.412,486,2.412,487,2.412,488,2.412,489,2.412,491,2.152,492,2.152,493,2.152,494,2.412,495,2.152,496,1.959,497,1.959,498,1.959,499,2.152,587,2.671,641,4.196,663,2.806,664,2.412,665,4.068,666,4.155,667,4.196,668,2.806,669,4.155,670,2.806,671,2.412,672,2.806,673,2.806,674,2.806,675,2.806,676,2.806,677,2.806,678,4.155,679,2.806,680,2.806,681,2.806]],["title/classes/DalleMiniCommandDto.html",[0,0.065,667,2.878]],["body/classes/DalleMiniCommandDto.html",[0,0.086,2,2.068,3,0.307,4,0.249,5,0.22,6,2.847,9,0.684,10,0.018,12,1.69,13,1.866,21,3.655,23,0.808,26,1.988,27,2.304,30,2.634,32,0.278,33,0.015,34,0.015,40,0.5,42,1.266,49,0.993,52,0.466,55,0.998,67,3.414,87,3.016,97,1.053,254,3.417,349,2.442,501,3.803,503,3.936,504,4.697,641,4.697,667,4.697,682,4.958,683,4.958]],["title/injectables/DalleMiniService.html",[35,0.579,665,2.412]],["body/injectables/DalleMiniService.html",[0,0.061,3,0.217,4,0.175,5,0.155,7,2.248,9,0.966,10,0.019,21,3.613,23,0.794,25,2.107,27,1.316,30,2.358,32,0.196,33,0.012,34,0.012,35,0.752,36,3.891,37,1.135,40,0.353,41,1.506,42,1.212,43,2.004,46,1.506,49,1.122,51,1.13,52,0.457,53,1.025,55,0.913,57,0.983,65,1.832,72,0.773,79,2.194,97,0.837,153,2.303,171,3.375,172,4.294,174,3.143,178,1.459,179,1.385,180,2.335,182,2.263,183,1.459,184,1.385,185,2.248,186,2.682,187,3.006,190,2.263,191,3.129,192,2.263,193,2.248,194,2.03,196,2.263,197,1.829,206,1.722,208,2.682,246,3.006,297,1.829,298,2.682,345,3.733,346,2.981,349,1.722,366,2.248,457,3.329,539,2.248,553,3.006,568,1.722,580,3.006,584,3.006,587,2.248,588,3.006,589,3.006,664,3.006,665,3.129,684,6.053,685,3.497,686,5.598,687,4.867,688,4.867,689,3.497,690,4.867,691,3.006,692,3.497,693,4.184,694,3.497]],["title/modules/EntityModule.html",[262,1.279,270,1.963]],["body/modules/EntityModule.html",[0,0.089,3,0.315,4,0.255,5,0.226,9,0.859,10,0.018,32,0.285,33,0.015,34,0.015,72,1.125,262,2.12,264,2.239,265,2.738,270,3.87,275,3.065,276,2.507,277,2.367,280,3.469,695,4.374,696,4.374,697,4.374,698,4.91,699,5.089,700,3.714,701,5.089]],["title/modules/GatewayModule.html",[262,1.279,702,2.619]],["body/modules/GatewayModule.html",[0,0.085,3,0.301,4,0.244,5,0.216,9,0.909,10,0.018,32,0.272,33,0.015,34,0.015,72,1.075,262,2.061,264,2.139,265,2.661,270,3.779,274,4.881,275,2.979,276,2.394,277,2.26,279,3.372,280,3.372,296,3.393,700,3.61,702,5.211,703,4.178,704,4.178,705,4.861,706,4.861,707,4.861,708,4.861]],["title/injectables/HelpCommand.html",[35,0.579,638,2.619]],["body/injectables/HelpCommand.html",[0,0.063,3,0.381,4,0.181,5,0.161,9,0.919,10,0.019,11,3.097,12,1.234,13,1.363,23,0.93,26,1.176,32,0.203,33,0.012,34,0.012,35,0.77,37,1.176,40,0.503,41,1.542,42,1.228,43,2.041,46,1.542,49,0.999,51,1.157,52,0.468,53,1.05,57,1.018,65,1.876,72,0.801,79,1.619,81,1.363,88,1.619,153,1.699,174,3.173,180,2.379,182,2.319,183,1.51,184,1.434,190,2.652,192,2.652,194,2.379,196,2.652,200,1.876,254,1.784,292,1.784,363,4.286,365,4.902,393,2.778,413,3.113,422,3.98,472,1.784,474,2.528,539,2.328,638,3.48,646,4.073,709,3.621,710,3.113,711,3.975,712,3.621,713,3.621,714,6.144,715,3.621,716,3.825,717,4.986,718,3.621,719,3.621,720,3.113,721,2.778,722,3.621,723,3.621,724,3.621,725,4.986,726,4.986,727,4.986,728,3.113,729,4.986,730,4.986,731,2.778,732,3.621,733,3.113,734,3.621,735,3.621]],["title/injectables/HelpInteractionCollector.html",[35,0.579,721,2.878]],["body/injectables/HelpInteractionCollector.html",[0,0.073,3,0.258,4,0.209,5,0.185,9,0.898,10,0.019,12,1.421,13,1.569,23,0.894,32,0.233,33,0.013,34,0.013,35,0.847,37,1.354,40,0.656,41,1.696,42,1.288,43,2.193,46,1.29,49,1.227,51,1.273,52,0.576,53,1.155,57,1.172,72,0.922,78,3.199,79,1.354,81,1.569,88,1.354,97,0.943,101,1.835,153,2.088,178,1.74,179,1.651,292,2.054,349,2.054,539,3.525,646,3.273,710,3.585,711,4.142,716,3.199,720,3.585,721,4.206,728,3.585,731,3.199,733,3.585,736,4.17,737,5.483,738,5.483,739,5.483,740,6.508,741,5.483,742,4.17,743,5.483,744,3.585,745,4.17,746,5.483,747,5.483,748,4.17,749,4.17]],["title/injectables/HelpService.html",[35,0.579,711,2.239]],["body/injectables/HelpService.html",[0,0.068,3,0.241,4,0.195,5,0.173,9,0.874,10,0.019,23,0.966,25,1.467,32,0.218,33,0.013,34,0.013,35,0.81,37,1.265,40,0.666,41,1.622,42,1.129,49,1.05,51,1.217,52,0.493,53,1.104,55,0.636,57,1.096,72,0.862,79,1.923,80,1.206,88,2.057,97,0.901,100,1.813,101,2.607,153,2.019,178,1.626,179,2.076,180,1.626,254,1.92,261,2.743,292,1.92,306,2.99,449,2.721,470,2.721,539,2.506,646,3.129,711,3.129,750,3.898,751,6.335,752,5.243,753,5.243,754,3.898,755,6.335,756,5.243,757,5.243,758,3.898,759,5.243,760,3.351,761,3.129,762,3.898,763,5.243,764,5.243,765,3.898,766,5.243,767,3.898,768,3.898,769,3.351,770,3.898,771,3.898,772,3.898,773,3.898,774,3.898,775,3.898,776,3.898,777,5.243,778,3.898,779,3.898,780,3.898,781,3.898,782,3.898,783,3.898,784,3.351,785,3.898]],["title/interfaces/ICogView2Data.html",[92,1.106,561,2.239]],["body/interfaces/ICogView2Data.html",[0,0.063,3,0.224,4,0.181,5,0.16,10,0.019,32,0.389,33,0.012,34,0.012,40,0.364,42,1.227,44,2.015,52,0.625,55,1.239,80,1.54,89,3.279,92,1.81,94,1.59,97,0.856,101,3.171,102,2.507,200,1.874,472,1.78,513,1.89,514,1.78,515,1.89,516,1.89,517,1.89,518,1.89,519,1.89,520,1.89,521,1.89,522,1.89,531,2.015,532,2.015,533,3.176,534,2.015,538,2.157,542,2.157,543,2.157,544,2.157,547,2.972,551,2.776,557,2.157,558,4.209,559,2.323,560,2.323,561,3.843,566,3.176,567,2.157,568,1.78,569,3.946,570,3.946,571,3.201,572,2.323,573,3.201,574,2.323,575,2.323,576,2.972]],["title/interfaces/ICogView2Request.html",[92,1.106,532,2.092]],["body/interfaces/ICogView2Request.html",[0,0.061,3,0.218,4,0.176,5,0.156,10,0.019,32,0.386,33,0.012,34,0.012,40,0.355,42,1.215,44,1.962,52,0.636,55,1.241,80,1.512,89,3.26,92,1.79,94,1.548,97,0.84,101,3.207,102,1.548,200,2.284,472,1.733,513,1.841,514,1.733,515,1.841,516,1.841,517,1.841,518,1.841,519,1.841,520,1.841,521,1.841,522,1.841,531,1.962,532,2.725,533,3.131,534,1.962,538,3.622,542,3.622,543,2.1,544,3.622,547,2.917,551,2.725,557,2.1,558,4.184,559,2.262,560,2.262,561,3.622,566,3.775,567,2.1,568,1.733,569,2.262,570,2.262,571,3.142,572,2.262,573,3.142,574,2.262,575,2.262,576,3.622]],["title/interfaces/ICogView2Response.html",[92,1.106,533,2.092]],["body/interfaces/ICogView2Response.html",[0,0.062,3,0.22,4,0.178,5,0.157,10,0.019,32,0.387,33,0.012,34,0.012,40,0.358,42,1.219,44,1.978,52,0.637,53,1.393,55,1.237,80,1.521,89,3.266,92,1.796,94,1.561,97,0.845,101,3.09,102,1.561,200,1.85,472,1.747,513,1.856,514,1.747,515,1.856,516,1.856,517,1.856,518,1.856,519,1.856,520,1.856,521,1.856,522,1.856,531,1.978,532,1.978,533,3.396,534,1.978,538,2.117,542,2.117,543,2.117,544,2.117,547,3.818,551,2.741,557,2.117,558,4.383,559,2.28,560,2.28,561,3.95,566,3.145,567,2.117,568,1.747,569,2.28,570,2.28,571,4.111,572,2.28,573,3.16,574,2.28,575,2.28,576,2.934]],["title/interfaces/ICogView2ResponseAcknowledged.html",[92,1.106,534,2.092]],["body/interfaces/ICogView2ResponseAcknowledged.html",[0,0.063,3,0.226,4,0.183,5,0.162,10,0.019,32,0.39,33,0.012,34,0.012,40,0.367,42,1.231,44,2.032,52,0.627,55,1.24,80,1.549,89,3.103,92,1.817,94,1.604,97,0.861,101,3.108,102,1.604,200,1.885,472,1.795,513,1.906,514,1.795,515,1.906,516,1.906,517,1.906,518,1.906,519,1.906,520,1.906,521,1.906,522,1.906,531,2.032,532,2.032,533,3.19,534,2.792,538,2.175,542,2.175,543,2.175,544,2.175,547,3.855,551,2.792,557,2.175,558,4.401,559,2.342,560,2.342,561,3.677,566,3.19,567,2.175,568,1.795,569,2.342,570,2.342,571,4.151,572,2.342,573,3.219,574,2.342,575,2.342,576,2.989]],["title/interfaces/ICommandHelp.html",[92,1.106,761,2.239]],["body/interfaces/ICommandHelp.html",[3,0.308,4,0.249,5,0.221,10,0.018,23,1.163,26,2.316,32,0.343,33,0.015,34,0.015,40,0.501,51,1.612,52,0.652,53,1.047,55,1.236,92,1.809,94,2.188,97,1.054,462,4.145,566,2.772,761,3.661,786,4.274,787,5.327]],["title/interfaces/ICommandParameter.html",[92,1.106,787,2.878]],["body/interfaces/ICommandParameter.html",[3,0.312,4,0.253,5,0.224,10,0.018,23,1.168,26,2.325,32,0.346,33,0.015,34,0.015,40,0.509,51,1.171,52,0.629,53,1.535,55,1.225,92,1.825,94,2.22,97,1.064,462,3.011,566,3.732,761,3.011,786,4.336,787,5.135]],["title/entities/Job.html",[297,1.963,788,2.878]],["body/entities/Job.html",[0,0.08,3,0.286,4,0.231,5,0.205,9,0.637,10,0.019,23,0.752,24,2.273,25,1.737,28,2.975,32,0.258,33,0.014,34,0.014,40,0.465,42,0.879,49,1.355,52,0.635,55,1.206,97,1.006,297,3.363,328,3.221,349,3.331,395,3.221,401,4.932,657,4.487,658,4.487,788,4.49,789,4.615,790,6.429,791,4.615,792,7.243,793,4.615,794,4.615,795,4.615,796,3.221,797,4.615,798,4.615]],["title/modules/JobModule.html",[262,1.279,698,2.412]],["body/modules/JobModule.html",[0,0.082,3,0.293,4,0.237,5,0.21,9,0.97,10,0.019,32,0.265,33,0.014,34,0.014,72,1.045,262,2.026,264,2.081,265,2.616,275,2.928,276,2.329,277,2.199,279,3.314,280,2.636,288,4.064,289,3.3,297,2.473,346,3.628,698,4.734,700,3.548,799,4.064,800,4.064,801,4.064,802,4.864,803,4.728,804,4.064,805,4.728,806,4.064,807,4.728]],["title/classes/JobResolver.html",[0,0.065,346,1.848]],["body/classes/JobResolver.html",[0,0.045,2,1.068,3,0.426,4,0.128,5,0.114,9,0.775,10,0.019,23,0.964,32,0.143,33,0.009,34,0.009,40,0.258,41,1.2,42,1.364,46,1.2,49,1.23,51,1.372,52,0.555,53,1.244,55,1.056,57,1.661,79,1.26,80,1.828,88,1.919,120,4.147,122,1.529,153,1.322,174,2.748,182,1.805,183,1.068,184,1.014,190,3.162,192,3.162,194,2.836,196,3.162,287,1.965,297,3.453,342,1.965,346,1.911,349,2.911,393,3.594,497,1.788,654,3.799,658,3.92,802,3.946,806,2.202,808,2.561,809,2.709,810,4.493,811,3.336,812,3.88,813,3.336,814,2.977,815,2.561,816,2.202,817,3.88,818,2.561,819,3.88,820,2.561,821,2.202,822,5.227,823,2.561,824,3.88,825,2.561,826,2.202,827,3.88,828,2.561,829,2.561,830,4.285,831,3.88,832,2.561,833,2.561,834,2.561,835,6.879,836,2.202,837,2.977,838,2.202,839,2.561,840,2.561,841,2.202,842,3.88,843,2.561,844,4.685,845,3.336,846,3.88,847,2.561,848,2.561,849,3.88,850,2.561,851,5.227,852,2.561,853,2.561,854,2.202,855,4.685,856,2.561,857,2.202,858,2.561,859,2.202,860,3.88,861,2.561,862,2.202]],["title/injectables/JobService.html",[35,0.579,802,2.412]],["body/injectables/JobService.html",[0,0.041,3,0.419,4,0.118,5,0.105,9,0.823,10,0.019,23,0.932,32,0.132,33,0.009,34,0.009,35,0.562,37,0.765,40,0.238,41,1.126,42,1.362,43,2.528,46,1.126,49,1.194,51,1.327,52,0.537,53,1.204,55,1.088,57,1.608,65,2.317,72,0.521,79,1.182,80,1.769,81,2.152,88,1.856,102,1.037,120,4.287,122,1.406,151,3.129,153,1.241,174,2.659,182,1.693,183,0.983,184,0.933,190,3.102,192,3.102,194,2.782,196,3.102,289,1.644,297,3.437,342,1.807,395,4.858,397,4.301,654,3.477,657,3.105,658,4.161,796,1.644,802,2.34,804,2.025,809,2.541,810,4.301,811,3.129,813,3.129,814,3.412,816,3.129,821,3.129,826,3.129,830,4.298,836,2.025,837,2.792,838,2.025,841,2.025,845,4.301,854,2.025,857,2.025,859,2.025,862,2.025,863,2.356,864,3.64,865,4.448,866,5.004,867,2.356,868,2.356,869,2.356,870,3.64,871,2.356,872,2.356,873,2.356,874,2.356,875,2.356,876,2.356,877,2.356,878,5.432,879,2.356,880,3.64,881,2.356,882,2.356,883,2.356,884,2.356,885,2.356,886,2.356,887,3.64,888,2.356,889,1.807,890,3.64,891,2.356]],["title/classes/MessageAttachmentWithDbRecord.html",[0,0.065,587,2.412]],["body/classes/MessageAttachmentWithDbRecord.html",[0,0.07,2,1.671,3,0.248,4,0.201,5,0.178,9,0.553,10,0.019,23,0.979,32,0.224,33,0.013,34,0.013,40,0.404,42,1.221,46,1.239,49,1.404,51,1.394,52,0.627,53,1.405,57,1.501,80,1.652,97,0.918,139,2.391,153,2.339,221,6.193,292,1.973,352,4.096,364,5.526,390,5.028,477,4.889,587,3.432,889,4.096,892,4.006,893,6.006,894,6.006,895,5.34,896,5.34,897,4.006,898,4.006,899,4.006,900,4.006,901,4.006,902,4.006,903,4.006,904,4.006,905,4.006,906,4.006,907,4.006,908,6.006,909,4.006,910,6.006,911,4.006]],["title/modules/ModelsModule.html",[262,1.279,271,2.239]],["body/modules/ModelsModule.html",[0,0.075,3,0.266,4,0.215,5,0.191,7,2.76,9,0.966,10,0.019,15,2.394,16,2.46,17,2.115,24,2.753,32,0.24,33,0.014,34,0.014,36,4.799,71,2.76,72,0.95,125,2.394,133,4.799,152,2.563,188,3.691,262,1.905,264,1.89,265,2.46,271,4.479,275,2.753,276,2.115,277,1.997,279,3.116,280,2.394,285,3.901,525,4.799,586,3.691,691,3.691,700,3.336,912,3.691,913,3.691,914,3.691,915,4.294,916,5.589]],["title/injectables/OpenAiCommand.html",[35,0.579,127,2.412]],["body/injectables/OpenAiCommand.html",[0,0.052,3,0.317,4,0.149,5,0.132,6,2.618,9,0.89,10,0.019,11,2.618,12,1.48,13,1.121,23,1.019,24,3.373,26,1.828,27,1.121,29,1.386,30,1.067,32,0.167,33,0.011,34,0.011,35,0.671,37,0.967,40,0.3,41,1.343,42,1.14,43,1.834,46,1.343,49,1.027,51,1.189,52,0.408,53,1.079,57,0.838,64,1.779,65,1.634,72,0.96,79,1.943,81,2.119,88,0.967,97,0.747,103,1.719,125,1.661,127,2.791,128,4.792,129,3.361,131,3.95,150,3.619,153,2.04,168,4.016,171,3.139,174,2.999,178,1.243,179,1.18,180,1.811,182,2.019,183,1.243,184,1.18,190,2.019,192,2.019,194,1.811,196,2.019,201,2.791,203,1.915,204,1.915,205,1.915,206,1.468,207,1.779,254,1.468,376,2.08,400,2.08,417,2.08,422,3.576,431,2.286,434,4.319,438,3.031,443,2.286,444,3.331,445,3.331,446,3.331,447,2.286,448,3.031,449,2.08,456,2.08,459,1.915,462,1.779,471,2.286,472,1.468,474,3.031,476,2.791,491,2.286,492,3.331,493,2.286,495,2.286,496,2.08,498,2.08,499,2.286,502,2.286,643,3.619,716,2.286,917,2.98,918,2.98,919,4.342,920,4.319,921,2.98,922,4.342,923,2.98,924,2.561,925,2.98,926,2.98,927,2.98,928,2.98,929,2.08,930,2.98,931,2.98,932,2.98,933,2.98,934,2.98,935,2.98,936,2.98,937,2.98,938,2.98,939,2.98,940,2.98,941,2.98]],["title/classes/OpenAiCommandDto.html",[0,0.065,920,2.878]],["body/classes/OpenAiCommandDto.html",[0,0.066,2,1.57,3,0.233,4,0.189,5,0.167,6,2.705,9,0.519,10,0.019,12,1.282,13,1.416,23,0.835,26,2.027,27,1.926,32,0.326,33,0.012,34,0.012,40,0.379,42,1.284,49,1.026,52,0.547,55,0.835,87,2.866,97,0.88,100,3.345,103,2.848,104,3.965,105,3.055,106,3.055,107,4.187,108,2.854,109,3.055,110,3.055,111,3.055,129,3.472,131,3.481,150,4.431,198,3.29,254,3.455,349,2.521,501,2.886,503,4.014,504,4.789,508,3.234,510,2.886,643,3.74,920,3.926,929,3.573,942,2.886,943,3.763,944,3.763,945,3.763,946,2.886,947,3.234,948,3.234,949,3.234,950,3.234,951,3.234,952,3.234,953,3.763]],["title/modules/ServicesModule.html",[262,1.279,272,2.239]],["body/modules/ServicesModule.html",[0,0.062,3,0.222,4,0.179,5,0.159,9,0.983,10,0.019,16,2.175,17,1.762,21,2.135,32,0.2,33,0.012,34,0.012,72,0.791,125,1.994,152,2.135,168,4.663,210,5.063,262,1.685,264,1.574,265,2.175,270,3.471,271,3.96,272,4.551,273,3.96,275,2.435,276,1.762,277,1.663,279,2.756,280,2.756,285,3.45,296,2.496,300,3.074,302,3.074,424,4.663,451,3.074,665,4.663,671,3.074,700,2.951,711,4.33,924,3.074,954,3.074,955,3.074,956,3.074,957,3.576,958,3.576,959,3.576,960,3.576,961,3.576,962,3.576,963,3.576]],["title/classes/UpdateJobInput.html",[0,0.065,830,2.619]],["body/classes/UpdateJobInput.html",[0,0.092,2,2.207,3,0.328,4,0.265,5,0.235,9,0.879,10,0.018,32,0.296,33,0.015,34,0.015,40,0.533,49,1.06,52,0.497,55,1.039,97,1.095,649,4.548,654,3.401,656,4.548,657,4.771,660,4.548,809,3.693,830,4.446,837,4.059,964,6.37,965,5.291,966,4.548,967,4.059,968,5.291,969,5.291]],["title/modules/UtilitiesModule.html",[262,1.279,273,2.239]],["body/modules/UtilitiesModule.html",[0,0.089,3,0.315,4,0.255,5,0.226,9,0.859,10,0.018,32,0.285,33,0.015,34,0.015,72,1.125,262,2.12,264,2.239,265,2.738,273,4.416,275,3.065,276,2.507,277,2.367,279,3.469,457,3.762,700,3.714,970,4.374,971,4.374,972,4.374,973,5.089,974,5.089]],["title/changelog.html",[197,1.642,975,2.191,976,2.698]],["body/changelog.html",[0,0.059,5,0.211,10,0.017,11,3.112,15,1.881,16,1.485,25,1.786,28,2.089,33,0.011,34,0.011,61,2.169,62,2.169,63,2.169,89,1.569,103,1.336,122,2.014,131,1.881,194,1.408,197,2.483,198,2.169,206,1.662,235,2.169,245,2.9,261,1.765,315,2.588,330,2.9,335,2.355,344,2.588,355,2.9,370,4.159,374,2.9,380,2.9,395,2.355,408,3.278,416,2.588,420,2.588,455,2.9,460,2.169,461,2.355,470,2.355,476,3.051,496,2.355,512,2.9,599,2.588,646,2.014,693,2.9,814,2.588,976,2.9,977,3.374,978,3.374,979,5.959,980,5.872,981,4.08,982,5.327,983,3.374,984,2.9,985,3.374,986,3.374,987,5.492,988,4.08,989,4.08,990,4.747,991,3.374,992,3.374,993,3.374,994,3.374,995,4.747,996,4.08,997,3.374,998,5.492,999,6.514,1000,3.374,1001,2.9,1002,3.374,1003,4.747,1004,3.374,1005,3.374,1006,3.374,1007,3.374,1008,2.588,1009,2.9,1010,3.374,1011,3.374,1012,3.374,1013,3.374,1014,2.9,1015,5.492,1016,3.374,1017,3.374,1018,3.374,1019,3.374,1020,3.374,1021,3.374,1022,3.374,1023,3.374,1024,3.374,1025,2.9,1026,2.588,1027,2.9,1028,2.9,1029,2.9,1030,2.9,1031,3.374,1032,3.374,1033,3.374,1034,2.9,1035,2.9,1036,4.747,1037,4.08,1038,3.374,1039,3.374,1040,2.9,1041,3.374,1042,4.08,1043,3.374,1044,3.374,1045,3.374,1046,3.374,1047,3.374,1048,3.374,1049,4.747,1050,5.959,1051,4.747,1052,3.374,1053,3.374,1054,3.374,1055,2.9,1056,3.374,1057,3.374,1058,4.747,1059,5.959,1060,4.747,1061,3.374,1062,3.374,1063,3.374,1064,4.08,1065,3.374,1066,3.374,1067,3.374,1068,3.374,1069,3.374,1070,3.374,1071,3.374,1072,3.374,1073,3.374,1074,2.9,1075,3.374,1076,3.374,1077,3.374,1078,2.9,1079,3.374,1080,3.374,1081,3.374,1082,3.374,1083,3.374,1084,2.9,1085,3.374]],["title/dependencies.html",[265,1.984,1086,2.698]],["body/dependencies.html",[10,0.019,12,1.962,13,2.166,33,0.014,34,0.014,71,2.889,72,1.273,74,3.137,152,2.683,183,1.875,184,1.78,234,3.448,235,3.7,265,1.978,284,3.864,287,3.448,289,3.137,292,2.214,325,3.448,335,4.018,624,3.864,796,3.137,966,3.864,967,3.448,1027,3.864,1028,3.864,1087,4.495,1088,4.495,1089,4.495,1090,4.495,1091,4.495,1092,4.495,1093,4.495,1094,6.351,1095,4.495,1096,4.495,1097,4.495,1098,4.948,1099,4.495,1100,4.495,1101,4.495,1102,4.495,1103,4.495,1104,4.495,1105,4.495,1106,4.495,1107,3.864,1108,4.495,1109,4.495,1110,4.495,1111,4.495,1112,4.495,1113,4.495,1114,4.495,1115,4.495,1116,4.495,1117,4.495,1118,4.495,1119,4.495,1120,4.495,1121,4.495,1122,4.495,1123,4.495,1124,4.495]],["title/miscellaneous/enumerations.html",[1125,1.642,1126,3.876]],["body/miscellaneous/enumerations.html",[6,2.289,10,0.019,15,1.982,16,2.682,17,1.751,33,0.012,34,0.012,40,0.358,100,2.977,103,1.949,104,3.569,105,2.122,106,2.122,107,3.638,108,1.982,109,2.122,110,2.122,111,2.122,129,2.122,158,2.285,179,3.07,200,2.125,261,2.954,418,2.481,458,1.982,500,4.231,510,2.726,511,3.055,513,2.575,514,2.425,515,2.575,516,2.575,517,2.575,518,2.575,519,2.575,520,2.575,521,2.575,522,2.575,546,3.055,620,3.055,643,2.285,942,3.776,947,3.055,948,3.055,949,3.055,950,3.055,951,3.055,952,3.055,1125,1.859,1126,3.055,1127,3.055,1128,3.554,1129,4.922,1130,3.554,1131,3.554,1132,3.554,1133,3.554,1134,3.554,1135,3.554,1136,3.554,1137,3.554,1138,3.554,1139,3.554,1140,3.554,1141,3.554,1142,3.554,1143,3.554,1144,3.055,1145,3.554,1146,3.554,1147,3.554,1148,3.554,1149,3.055,1150,3.554,1151,3.554,1152,3.554,1153,3.554,1154,3.554,1155,3.554,1156,3.554,1157,3.554,1158,3.055,1159,3.554,1160,3.554,1161,3.554,1162,3.554,1163,3.554,1164,3.554,1165,3.554,1166,3.554,1167,3.554,1168,3.554,1169,3.554]],["title/miscellaneous/functions.html",[1125,1.642,1170,3.876]],["body/miscellaneous/functions.html",[10,0.018,11,2.446,23,1.035,31,3.671,33,0.015,34,0.015,40,0.53,51,1.473,52,0.596,53,1.336,55,1.035,57,1.478,222,4.52,370,3.671,448,4.43,459,3.381,568,3.126,646,3.788,761,3.788,1125,2.751,1170,4.52,1171,6.817,1172,5.259,1173,4.52,1174,4.52,1175,5.259,1176,4.52,1177,5.259,1178,5.259,1179,4.52,1180,5.259]],["title/index.html",[40,0.316,197,1.642,975,2.191]],["body/index.html",[4,0.11,5,0.097,10,0.015,11,2.432,12,1.892,15,1.919,16,1.869,20,2.64,23,0.561,24,3.045,25,2.089,28,1.869,29,1.976,32,0.123,33,0.008,34,0.008,51,0.509,52,0.399,53,0.461,61,1.409,62,1.409,63,3.094,67,1.919,103,2.198,120,2.054,128,3.692,131,3.236,143,2.958,146,2.64,149,1.681,150,1.409,158,1.409,184,0.868,197,1.8,198,2.731,206,1.08,235,2.212,261,2.518,292,1.08,306,1.681,310,1.884,315,2.64,318,4.495,325,1.681,335,1.53,344,1.681,370,4.415,408,1.308,414,1.884,416,1.681,420,1.681,427,1.884,429,3.652,456,3.359,457,2.371,458,1.919,459,1.409,460,3.094,461,2.402,462,2.054,476,1.409,497,1.53,498,2.965,503,3.362,599,1.681,731,1.681,744,1.884,769,2.958,796,1.53,809,3.359,889,2.64,929,2.402,946,1.681,975,2.402,981,1.884,982,1.681,984,1.884,988,5.437,989,1.884,996,1.884,1001,1.884,1009,1.884,1014,1.884,1025,1.884,1026,1.681,1029,1.884,1030,1.884,1034,1.884,1035,5.314,1037,1.884,1040,1.884,1042,1.884,1055,2.958,1074,1.884,1078,2.958,1084,3.652,1107,1.884,1181,3.441,1182,2.192,1183,2.192,1184,2.192,1185,2.192,1186,4.248,1187,3.441,1188,2.192,1189,1.884,1190,5.23,1191,3.441,1192,3.441,1193,4.813,1194,3.441,1195,3.359,1196,3.441,1197,3.441,1198,3.441,1199,2.958,1200,2.192,1201,2.192,1202,4.248,1203,6.182,1204,6.182,1205,2.192,1206,2.192,1207,2.192,1208,1.884,1209,2.192,1210,2.192,1211,1.884,1212,4.813,1213,2.192,1214,2.192,1215,2.192,1216,2.192,1217,1.884,1218,3.441,1219,2.192,1220,3.441,1221,2.192,1222,2.192,1223,3.441,1224,3.441,1225,4.813,1226,2.192,1227,3.441,1228,2.192,1229,2.192,1230,1.884,1231,2.192,1232,1.884,1233,2.192,1234,2.192,1235,2.192,1236,3.441,1237,4.248,1238,2.192,1239,2.192,1240,2.192,1241,4.813,1242,4.248,1243,2.192,1244,2.192,1245,2.192,1246,2.192,1247,2.192,1248,3.441,1249,2.192,1250,2.192,1251,2.192,1252,1.884,1253,2.192,1254,2.192,1255,2.192,1256,3.652,1257,2.192,1258,2.192,1259,2.192,1260,2.192,1261,2.192,1262,3.441,1263,2.192,1264,2.192,1265,1.884,1266,2.192,1267,1.884,1268,2.192,1269,1.884,1270,1.884,1271,2.192,1272,3.441,1273,2.192,1274,5.55,1275,2.192,1276,4.248,1277,2.192,1278,2.192,1279,1.681,1280,2.192,1281,2.192,1282,2.192,1283,2.192,1284,2.958,1285,2.192,1286,2.192,1287,3.441,1288,3.259,1289,2.192,1290,2.192,1291,3.441,1292,2.192,1293,2.192,1294,2.192,1295,2.192,1296,3.441,1297,3.441,1298,4.248,1299,2.192,1300,2.192,1301,2.192,1302,2.958,1303,3.441,1304,4.248,1305,3.441,1306,3.441,1307,2.192,1308,3.441,1309,2.192,1310,1.884,1311,2.192,1312,2.192,1313,2.192,1314,2.192,1315,2.192,1316,2.192,1317,2.192,1318,2.192,1319,3.441,1320,2.192,1321,2.192,1322,1.884,1323,2.192,1324,2.192,1325,1.884,1326,2.958,1327,3.652,1328,2.192,1329,1.884,1330,2.192,1331,2.192,1332,2.192,1333,2.192,1334,2.192,1335,2.192,1336,2.192,1337,2.192,1338,3.441,1339,3.441,1340,2.192,1341,1.884,1342,2.192,1343,2.192,1344,1.884,1345,2.192,1346,2.192,1347,2.192,1348,2.192,1349,3.441,1350,2.192,1351,3.441,1352,3.441,1353,2.192,1354,2.192,1355,3.441,1356,1.884,1357,1.884,1358,1.884,1359,2.192,1360,1.884,1361,1.884,1362,2.192,1363,2.192,1364,2.192]],["title/license.html",[197,1.642,975,2.191,1195,2.191]],["body/license.html",[0,0.026,4,0.292,5,0.228,9,0.202,10,0.008,23,0.404,26,0.476,29,0.681,31,2.246,33,0.006,34,0.006,49,0.294,64,1.478,94,0.645,100,1.759,121,2.95,146,1.124,147,1.259,149,1.124,158,0.942,191,0.942,277,0.681,328,1.023,387,2.766,408,1.92,415,1.259,421,5.121,454,1.023,458,0.817,460,0.942,483,1.124,503,2.432,784,1.259,788,4.245,878,1.259,929,3.862,967,1.124,980,1.259,982,1.9,1008,1.124,1026,1.124,1064,2.766,1098,2.129,1189,1.259,1195,4.938,1199,1.259,1208,1.259,1211,2.129,1217,2.129,1232,1.259,1252,1.259,1256,1.259,1265,2.766,1267,1.259,1269,1.259,1270,1.259,1279,2.468,1284,1.259,1302,1.259,1310,3.635,1322,1.259,1325,2.766,1326,2.766,1327,1.259,1329,5.512,1341,1.259,1344,1.259,1356,1.259,1357,2.766,1358,4.599,1360,1.259,1361,1.259,1365,3.783,1366,3.217,1367,1.465,1368,1.465,1369,1.465,1370,5.35,1371,5.958,1372,3.783,1373,4.229,1374,1.465,1375,6.168,1376,5.534,1377,1.465,1378,1.465,1379,5.534,1380,5.834,1381,4.229,1382,2.477,1383,1.465,1384,4.229,1385,1.465,1386,1.465,1387,3.783,1388,1.465,1389,1.465,1390,3.783,1391,2.477,1392,2.477,1393,1.465,1394,3.217,1395,2.477,1396,2.477,1397,1.465,1398,3.783,1399,2.477,1400,4.59,1401,1.465,1402,2.477,1403,1.465,1404,1.465,1405,1.465,1406,1.465,1407,1.465,1408,1.465,1409,1.465,1410,3.217,1411,1.465,1412,2.477,1413,1.465,1414,1.465,1415,4.59,1416,5.35,1417,3.783,1418,1.465,1419,1.465,1420,1.465,1421,1.465,1422,1.465,1423,1.465,1424,1.465,1425,7.074,1426,3.217,1427,2.477,1428,1.465,1429,1.465,1430,5.35,1431,2.477,1432,1.465,1433,4.229,1434,2.477,1435,1.465,1436,6.413,1437,6.481,1438,1.465,1439,1.465,1440,1.465,1441,1.465,1442,1.465,1443,1.465,1444,2.477,1445,2.477,1446,1.465,1447,1.465,1448,1.465,1449,3.783,1450,4.229,1451,1.465,1452,2.477,1453,3.783,1454,2.477,1455,1.465,1456,4.229,1457,2.477,1458,1.465,1459,1.465,1460,3.217,1461,1.465,1462,1.465,1463,1.465,1464,2.477,1465,1.465,1466,1.465,1467,3.217,1468,1.465,1469,1.465,1470,3.217,1471,1.465,1472,1.465,1473,1.465,1474,3.783,1475,5.534,1476,1.465,1477,1.465,1478,2.477,1479,5.137,1480,3.217,1481,2.477,1482,3.783,1483,2.477,1484,2.477,1485,2.477,1486,2.477,1487,2.477,1488,3.217,1489,2.477,1490,2.477,1491,2.477,1492,1.465,1493,2.477,1494,2.477,1495,1.465,1496,1.465,1497,4.229,1498,4.887,1499,3.217,1500,2.477,1501,1.465,1502,2.477,1503,2.477,1504,1.465,1505,1.465,1506,3.217,1507,2.477,1508,1.465,1509,1.465,1510,1.465,1511,3.217,1512,1.465,1513,1.465,1514,1.465,1515,2.477,1516,2.477,1517,1.465,1518,1.465,1519,1.465,1520,1.465,1521,1.465,1522,1.465,1523,1.465,1524,2.477,1525,1.465,1526,1.465,1527,1.465,1528,1.465,1529,1.465,1530,1.465,1531,1.465,1532,1.465,1533,3.217,1534,1.465,1535,3.217,1536,1.465,1537,1.465,1538,1.465,1539,5.137,1540,1.465,1541,1.465,1542,1.465,1543,1.465,1544,1.465,1545,3.783,1546,2.477,1547,3.783,1548,1.465,1549,1.465,1550,1.465,1551,1.465,1552,1.465,1553,1.465,1554,2.477,1555,2.477,1556,1.465,1557,1.465,1558,1.465,1559,2.477,1560,1.465,1561,1.465,1562,4.229,1563,1.465,1564,1.465,1565,1.465,1566,1.465,1567,1.465,1568,1.465,1569,1.465,1570,3.783,1571,1.465,1572,1.465,1573,1.465,1574,1.465,1575,1.465,1576,1.465,1577,1.465,1578,1.465,1579,1.465,1580,1.465,1581,1.465,1582,2.477,1583,1.465,1584,1.465,1585,2.477,1586,1.465,1587,1.465,1588,1.465,1589,1.465,1590,1.465,1591,1.465,1592,1.465,1593,3.783,1594,3.217,1595,3.217,1596,3.217,1597,2.477,1598,2.477,1599,3.217,1600,2.477,1601,2.477,1602,2.477,1603,1.465,1604,1.465,1605,1.465,1606,1.465,1607,1.465,1608,1.465,1609,1.465,1610,1.465,1611,2.477,1612,1.465,1613,1.465,1614,1.465,1615,1.465,1616,4.229,1617,1.465,1618,1.465,1619,1.465,1620,1.465,1621,1.465,1622,1.465,1623,1.465,1624,1.465,1625,1.465,1626,4.229,1627,1.465,1628,1.465,1629,1.465,1630,1.465,1631,1.465,1632,1.465,1633,1.465,1634,1.465,1635,1.465,1636,1.465,1637,1.465,1638,1.465,1639,1.465,1640,1.465,1641,1.465,1642,1.465,1643,3.217,1644,1.465,1645,1.465,1646,1.465,1647,1.465,1648,2.477,1649,1.465,1650,1.465,1651,1.465,1652,1.465,1653,1.465,1654,1.465,1655,1.465,1656,1.465,1657,1.465,1658,1.465,1659,1.465,1660,1.465,1661,1.465,1662,1.465,1663,1.465,1664,2.477,1665,1.465,1666,1.465,1667,2.477,1668,2.477,1669,1.465,1670,1.465,1671,1.465,1672,1.465,1673,1.465,1674,1.465,1675,1.465,1676,1.465,1677,1.465,1678,1.465,1679,1.465,1680,1.465,1681,1.465,1682,1.465,1683,1.465,1684,1.465,1685,1.465,1686,1.465]],["title/modules.html",[264,2.248]],["body/modules.html",[10,0.015,33,0.015,34,0.015,263,3.682,264,2.321,269,3.391,270,2.76,271,3.149,272,3.149,273,3.149,698,3.391,702,3.682,1008,5.766,1687,7.517,1688,7.517,1689,7.517]],["title/overview.html",[1690,4.391]],["body/overview.html",[2,1.285,10,0.019,14,3.356,19,3.356,33,0.011,34,0.011,36,4.188,37,1,94,1.355,127,3.356,133,4.188,158,1.98,168,4.188,210,4.548,263,5.013,264,1.355,265,1.958,266,2.648,267,2.648,268,2.648,269,4.649,270,3.555,271,4.254,272,4.49,273,3.889,274,4.288,275,2.191,276,1.517,277,1.433,328,2.15,346,2.817,424,4.188,457,3.209,458,1.717,525,4.188,635,2.648,637,2.648,638,3.644,665,4.188,695,2.648,696,2.648,697,2.648,698,4.492,702,4.548,703,2.648,704,2.648,711,3.889,799,2.648,800,2.648,801,2.648,802,4.188,912,2.648,913,2.648,914,2.648,954,2.648,955,2.648,956,2.648,970,2.648,971,2.648,972,2.648,1144,2.648,1149,2.648,1158,2.648,1690,2.648]],["title/properties.html",[97,0.775,1086,2.698]],["body/properties.html",[10,0.018,26,1.885,33,0.016,34,0.016,97,0.998,453,4.052,1195,4.052,1279,4.453,1691,5.805,1692,5.805]],["title/miscellaneous/typealiases.html",[1125,1.642,1693,4.509]],["body/miscellaneous/typealiases.html",[6,1.963,10,0.019,33,0.013,34,0.013,40,0.426,52,0.519,55,1.187,75,4.24,76,4.751,95,3.858,96,3.858,100,3.416,103,2.188,104,4.013,105,3.299,106,3.299,107,4.296,108,3.082,109,3.299,110,3.299,111,3.299,129,2.52,200,2.08,513,2.208,514,2.079,515,2.208,516,2.208,517,2.208,518,2.208,519,2.208,520,2.208,521,2.208,522,2.208,551,2.353,557,2.52,558,3.299,567,2.52,568,2.079,576,3.299,643,2.713,942,4.24,946,4.24,1125,2.208,1127,3.628,1694,4.221,1695,6.162,1696,6.162,1697,6.162,1698,4.221]],["title/miscellaneous/variables.html",[1125,1.642,1288,3.459]],["body/miscellaneous/variables.html",[10,0.019,33,0.014,34,0.014,40,0.44,52,0.53,55,1.079,80,1.746,87,2.78,88,2.032,102,2.913,121,3.628,178,2.86,179,2.9,352,3.344,502,3.344,760,4.851,761,3.369,1125,2.28,1173,3.747,1174,3.747,1176,3.747,1179,3.747,1230,3.747,1288,3.344,1699,5.644,1700,6.259,1701,5.644,1702,5.644,1703,5.644,1704,4.359,1705,4.359,1706,4.359,1707,4.359,1708,4.359,1709,4.359,1710,5.644,1711,6.62,1712,4.359,1713,4.359]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":539,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{}}}],["0.1.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":161,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.7",{"_index":156,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.75",{"_index":160,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["001",{"_index":107,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["002",{"_index":108,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["1",{"_index":158,"title":{},"body":{"injectables/AiStoryModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":625,"title":{},"body":{"injectables/Collage.html":{}}}],["1.1.4",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["1.29.2",{"_index":1280,"title":{},"body":{"index.html":{}}}],["1.3.0",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["1.4.5",{"_index":455,"title":{},"body":{"injectables/CogView2Command.html":{},"changelog.html":{}}}],["1.5.0",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":1147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["10.0.19",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["10.0.21",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1149,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["11t",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":546,"title":{},"body":{"injectables/CogView2Model.html":{},"miscellaneous/enumerations.html":{}}}],["13",{"_index":1152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["13.8.1",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["15",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["15.8.0",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["16th",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["18",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["18th",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1}/${__include_in_help.length",{"_index":785,"title":{},"body":{"injectables/HelpService.html":{}}}],["2",{"_index":261,"title":{},"body":{"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2.0",{"_index":1366,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":512,"title":{},"body":{"classes/CogView2CommandDto.html":{},"changelog.html":{}}}],["2.0.1",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":1691,"title":{},"body":{"properties.html":{}}}],["2.2.0",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["2.command",{"_index":18,"title":{},"body":{"classes/AiArtCommand.html":{},"modules/CommandsModule.html":{}}}],["2.command.ts",{"_index":419,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:47",{"_index":425,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:67",{"_index":435,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto",{"_index":452,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto.ts",{"_index":500,"title":{},"body":{"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["2.dto.ts:36",{"_index":505,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.dto.ts:45",{"_index":507,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.model",{"_index":586,"title":{},"body":{"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{}}}],["2.model.ts",{"_index":527,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:13",{"_index":528,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:16",{"_index":530,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:52",{"_index":529,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.service",{"_index":451,"title":{},"body":{"injectables/CogView2Command.html":{},"modules/ServicesModule.html":{}}}],["2.service.ts",{"_index":578,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:14",{"_index":579,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:30",{"_index":582,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2/cog",{"_index":17,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"miscellaneous/enumerations.html":{}}}],["20",{"_index":620,"title":{},"body":{"injectables/Collage.html":{},"miscellaneous/enumerations.html":{}}}],["2004",{"_index":1368,"title":{},"body":{"license.html":{}}}],["2022",{"_index":980,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20th",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["22",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2400",{"_index":541,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["26th",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["27th",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":159,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/Collage.html":{}}}],["3.0.2",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":617,"title":{},"body":{"injectables/Collage.html":{}}}],["3000",{"_index":246,"title":{},"body":{"injectables/AmqpService.html":{},"injectables/DalleMiniService.html":{}}}],["300_000",{"_index":745,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["320",{"_index":244,"title":{},"body":{"injectables/AmqpService.html":{}}}],["3x3",{"_index":597,"title":{},"body":{"injectables/Collage.html":{}}}],["4",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4.0.7",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["50",{"_index":1405,"title":{},"body":{"license.html":{}}}],["500",{"_index":554,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["512",{"_index":157,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["5becea4c",{"_index":1281,"title":{},"body":{"index.html":{}}}],["6",{"_index":1140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.2.0",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1144,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["8.0.0",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["8.2.8",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":458,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/DalleMiniCommand.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["__include_in_help",{"_index":760,"title":{},"body":{"injectables/HelpService.html":{},"miscellaneous/variables.html":{}}}],["__include_in_help.length",{"_index":764,"title":{},"body":{"injectables/HelpService.html":{}}}],["__include_in_help[modularindex",{"_index":765,"title":{},"body":{"injectables/HelpService.html":{}}}],["_dbrecord",{"_index":893,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["_id",{"_index":657,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["_messageattachment",{"_index":894,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["above",{"_index":1574,"title":{},"body":{"license.html":{}}}],["accept",{"_index":85,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["acceptance",{"_index":1646,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1643,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1304,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":895,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["acknowledgments",{"_index":1197,"title":{},"body":{"index.html":{}}}],["act",{"_index":1652,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1386,"title":{},"body":{"license.html":{}}}],["action",{"_index":542,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["actionrow",{"_index":402,"title":{},"body":{"injectables/BotGateway.html":{}}}],["actiontype",{"_index":576,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["acts",{"_index":1624,"title":{},"body":{"license.html":{}}}],["ada",{"_index":111,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["add",{"_index":982,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["addcomponents",{"_index":726,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["added",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["addendum",{"_index":1561,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1562,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1451,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1641,"title":{},"body":{"license.html":{}}}],["again",{"_index":1348,"title":{},"body":{"index.html":{}}}],["against",{"_index":1516,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1655,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1596,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1579,"title":{},"body":{"license.html":{}}}],["ai",{"_index":24,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["ai.command",{"_index":130,"title":{},"body":{"classes/AiStoryCommand.html":{},"modules/CommandsModule.html":{}}}],["ai.command.ts",{"_index":917,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:40",{"_index":919,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:47",{"_index":921,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto",{"_index":925,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto.ts",{"_index":942,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ai.dto.ts:29",{"_index":943,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai.dto.ts:38",{"_index":945,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai/open",{"_index":129,"title":{},"body":{"classes/AiStoryCommand.html":{},"modules/CommandsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["aiart",{"_index":470,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"changelog.html":{}}}],["aiartcommand",{"_index":1,"title":{"classes/AiArtCommand.html":{}},"body":{"classes/AiArtCommand.html":{},"modules/CommandsModule.html":{}}}],["aiartimagearray",{"_index":75,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{},"miscellaneous/typealiases.html":{}}}],["aiartmodel",{"_index":36,"title":{"injectables/AiArtModel.html":{}},"body":{"injectables/AiArtModel.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aiartresponse",{"_index":76,"title":{},"body":{"injectables/AiArtModel.html":{},"miscellaneous/typealiases.html":{}}}],["aistorychoices",{"_index":93,"title":{"interfaces/AiStoryChoices.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistorycommand",{"_index":124,"title":{"classes/AiStoryCommand.html":{}},"body":{"classes/AiStoryCommand.html":{},"modules/CommandsModule.html":{}}}],["aistorymodel",{"_index":133,"title":{"injectables/AiStoryModel.html":{}},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aistoryrequest",{"_index":112,"title":{"interfaces/AiStoryRequest.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryresponse",{"_index":119,"title":{"interfaces/AiStoryResponse.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryservice",{"_index":168,"title":{"injectables/AiStoryService.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["aistoryservice.name",{"_index":209,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["aliases",{"_index":1694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice",{"_index":927,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["alleging",{"_index":1521,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1512,"title":{},"body":{"license.html":{}}}],["along",{"_index":1552,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1560,"title":{},"body":{"license.html":{}}}],["already",{"_index":1260,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1330,"title":{},"body":{"index.html":{}}}],["amazingfeature",{"_index":1354,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":235,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["amqp/amqp.service",{"_index":959,"title":{},"body":{"modules/ServicesModule.html":{}}}],["amqp_url",{"_index":1234,"title":{},"body":{"index.html":{}}}],["amqpclient",{"_index":217,"title":{},"body":{"injectables/AmqpService.html":{}}}],["amqpmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpmodule.forrootasync",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpservice",{"_index":210,"title":{"injectables/AmqpService.html":{}},"body":{"injectables/AmqpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["and/or",{"_index":1649,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":1441,"title":{},"body":{"license.html":{}}}],["another",{"_index":1268,"title":{},"body":{"index.html":{}}}],["anymore",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["apache",{"_index":1365,"title":{},"body":{"license.html":{}}}],["apache2.0",{"_index":1359,"title":{},"body":{"index.html":{}}}],["api",{"_index":429,"title":{},"body":{"injectables/CogView2Command.html":{},"index.html":{}}}],["apollo",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1251,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1557,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1434,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1594,"title":{},"body":{"license.html":{}}}],["application",{"_index":1216,"title":{},"body":{"index.html":{}}}],["application.commands",{"_index":1264,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":86,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["applies",{"_index":1505,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1664,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":263,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1335,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1671,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1610,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1678,"title":{},"body":{"license.html":{}}}],["args",{"_index":833,"title":{},"body":{"classes/JobResolver.html":{}}}],["arising",{"_index":1631,"title":{},"body":{"license.html":{}}}],["arr",{"_index":607,"title":{},"body":{"injectables/Collage.html":{}}}],["arr.map((image",{"_index":628,"title":{},"body":{"injectables/Collage.html":{}}}],["array",{"_index":59,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["art",{"_index":25,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"changelog.html":{},"index.html":{}}}],["art.command",{"_index":640,"title":{},"body":{"modules/CommandsModule.html":{}}}],["art.command.ts",{"_index":8,"title":{},"body":{"classes/AiArtCommand.html":{}}}],["art.git",{"_index":1226,"title":{},"body":{"index.html":{}}}],["art.model",{"_index":691,"title":{},"body":{"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art.model.ts",{"_index":39,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:10",{"_index":70,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:30",{"_index":56,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:7",{"_index":50,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.ts",{"_index":1697,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["art/ai",{"_index":7,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art/cog",{"_index":418,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/CommandsModule.html":{},"miscellaneous/enumerations.html":{}}}],["art/dalle",{"_index":641,"title":{},"body":{"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["art/main/.github/images/logo.png",{"_index":757,"title":{},"body":{"injectables/HelpService.html":{}}}],["asserted",{"_index":1661,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1614,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1612,"title":{},"body":{"license.html":{}}}],["async",{"_index":43,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["attach",{"_index":1267,"title":{},"body":{"index.html":{},"license.html":{}}}],["attached",{"_index":1432,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":477,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["attachment(attachment",{"_index":911,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["attribution",{"_index":1545,"title":{},"body":{"license.html":{}}}],["author",{"_index":453,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"properties.html":{}}}],["authorization",{"_index":163,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["authorized",{"_index":1382,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1426,"title":{},"body":{"license.html":{}}}],["auto_reconnect",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete",{"_index":504,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{}}}],["autocompletion",{"_index":1319,"title":{},"body":{"index.html":{}}}],["autodelete",{"_index":257,"title":{},"body":{"injectables/AmqpService.html":{}}}],["automated",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1042,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["available",{"_index":1428,"title":{},"body":{"license.html":{}}}],["average_duration",{"_index":570,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["await",{"_index":81,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["axios",{"_index":74,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{},"dependencies.html":{}}}],["axiosresponse",{"_index":73,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["b",{"_index":1284,"title":{},"body":{"index.html":{},"license.html":{}}}],["babage",{"_index":110,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["back",{"_index":1203,"title":{},"body":{"index.html":{}}}],["baroque",{"_index":1151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base64",{"_index":60,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["based",{"_index":29,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{},"license.html":{}}}],["basis",{"_index":1598,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":164,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["before",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":1456,"title":{},"body":{"license.html":{}}}],["being",{"_index":1040,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bellow",{"_index":1246,"title":{},"body":{"index.html":{}}}],["below",{"_index":1435,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1409,"title":{},"body":{"license.html":{}}}],["best_of",{"_index":114,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["beta",{"_index":106,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["better",{"_index":1337,"title":{},"body":{"index.html":{}}}],["bind",{"_index":1252,"title":{},"body":{"index.html":{},"license.html":{}}}],["blacklight",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boilerplate",{"_index":1665,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":566,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["bootstrap",{"_index":1171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrapped",{"_index":195,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["bot",{"_index":370,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["botgateway",{"_index":274,"title":{"injectables/BotGateway.html":{}},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["bots",{"_index":1259,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1668,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1349,"title":{},"body":{"index.html":{}}}],["bricks",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1689,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1687,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":631,"title":{},"body":{"injectables/Collage.html":{}}}],["buffer.from(image",{"_index":410,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["bug",{"_index":989,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":1084,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["building",{"_index":1294,"title":{},"body":{"index.html":{}}}],["built",{"_index":1191,"title":{},"body":{"index.html":{}}}],["bulb",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1245,"title":{},"body":{"index.html":{}}}],["buttoninteraction",{"_index":740,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["c",{"_index":1542,"title":{},"body":{"license.html":{}}}],["cachetype",{"_index":719,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["call",{"_index":437,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["called",{"_index":474,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["canvas",{"_index":599,"title":{},"body":{"injectables/Collage.html":{},"changelog.html":{},"index.html":{}}}],["capital_abcd",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["card_file_box",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["carry",{"_index":1537,"title":{},"body":{"license.html":{}}}],["catch",{"_index":204,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["categorization",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["category",{"_index":190,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["cause",{"_index":1396,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1541,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":976,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1353,"title":{},"body":{"index.html":{}}}],["channel",{"_index":236,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.close('service",{"_index":242,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queue(queuename",{"_index":240,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queuepurge(queuename",{"_index":241,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel?.queue(queuename",{"_index":251,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channels",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1630,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1488,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":1350,"title":{},"body":{"index.html":{}}}],["chinese",{"_index":522,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["choice",{"_index":508,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{}}}],["choice(model",{"_index":953,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(model)@param({name",{"_index":944,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(style",{"_index":524,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choice(style)@param({name",{"_index":506,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choices",{"_index":123,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["choices[0].text",{"_index":167,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["choose",{"_index":1644,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":932,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["claim",{"_index":1518,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1507,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{}},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"changelog.html":{},"license.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"overview.html":{}}}],["cleanup",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":1220,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":1255,"title":{},"body":{"index.html":{}}}],["client",{"_index":344,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"index.html":{}}}],["client's",{"_index":377,"title":{},"body":{"injectables/BotGateway.html":{}}}],["client.js",{"_index":1206,"title":{},"body":{"index.html":{}}}],["client_id",{"_index":1258,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1223,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commandsmodule",{"_index":635,"title":{},"body":{"modules/CommandsModule.html":{},"overview.html":{}}}],["cluster_commandsmodule_imports",{"_index":636,"title":{},"body":{"modules/CommandsModule.html":{}}}],["cluster_commandsmodule_providers",{"_index":637,"title":{},"body":{"modules/CommandsModule.html":{},"overview.html":{}}}],["cluster_entitymodule",{"_index":695,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_exports",{"_index":697,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_imports",{"_index":696,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":703,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":704,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":706,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_gatewaymodule_providers",{"_index":705,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_jobmodule",{"_index":799,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_exports",{"_index":800,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_providers",{"_index":801,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_modelsmodule",{"_index":912,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_exports",{"_index":913,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_providers",{"_index":914,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_servicesmodule",{"_index":954,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_exports",{"_index":956,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":957,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":955,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule",{"_index":970,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":971,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_providers",{"_index":972,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["code",{"_index":1064,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["codecov",{"_index":1001,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cog",{"_index":15,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/ModelsModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["cogview2",{"_index":461,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"changelog.html":{},"index.html":{}}}],["cogview2command",{"_index":14,"title":{"injectables/CogView2Command.html":{}},"body":{"classes/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"modules/CommandsModule.html":{},"overview.html":{}}}],["cogview2commanddto",{"_index":432,"title":{"classes/CogView2CommandDto.html":{}},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{}}}],["cogview2model",{"_index":525,"title":{"injectables/CogView2Model.html":{}},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["cogview2response",{"_index":531,"title":{"classes/CogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["cogview2response('complete",{"_index":555,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["cogview2service",{"_index":424,"title":{"injectables/CogView2Service.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["cogview2service.name",{"_index":595,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["collage",{"_index":457,"title":{"injectables/Collage.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"overview.html":{}}}],["collage.options",{"_index":626,"title":{},"body":{"injectables/Collage.html":{}}}],["collage/collage",{"_index":974,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["collages",{"_index":1181,"title":{},"body":{"index.html":{}}}],["collected",{"_index":381,"title":{},"body":{"injectables/BotGateway.html":{}}}],["collectors/help.collector",{"_index":722,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["column",{"_index":792,"title":{},"body":{"entities/Job.html":{}}}],["combination",{"_index":1513,"title":{},"body":{"license.html":{}}}],["comics",{"_index":517,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["command",{"_index":11,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["commandinteraction",{"_index":714,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["commands",{"_index":476,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{},"index.html":{}}}],["commands/art/cog",{"_index":960,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/art/dalle",{"_index":961,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/commands.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["commands/help/help.service",{"_index":962,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/story/ai",{"_index":963,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commandsmodule",{"_index":269,"title":{"modules/CommandsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules.html":{},"overview.html":{}}}],["comment",{"_index":1672,"title":{},"body":{"license.html":{}}}],["comments",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":1639,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1352,"title":{},"body":{"index.html":{}}}],["common",{"_index":1389,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1460,"title":{},"body":{"license.html":{}}}],["community",{"_index":1328,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1422,"title":{},"body":{"license.html":{}}}],["complete",{"_index":551,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["compliance",{"_index":1680,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1568,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1014,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":413,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["compose",{"_index":1274,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1055,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["computer",{"_index":1636,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1371,"title":{},"body":{"license.html":{}}}],["config.yml",{"_index":1230,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["config/yamlconfigurationloader",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["configmodule.forroot",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":136,"title":{},"body":{"injectables/AiStoryModel.html":{},"modules/AppModule.html":{}}}],["configservice.get('amqp.url",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('discord.token",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo.uri",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sentry.dsn",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sentry.release.name",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1026,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["connected",{"_index":368,"title":{},"body":{"injectables/BotGateway.html":{}}}],["connection",{"_index":374,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["consequential",{"_index":1629,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1651,"title":{},"body":{"license.html":{}}}],["console",{"_index":1303,"title":{},"body":{"index.html":{}}}],["conspicuously",{"_index":1471,"title":{},"body":{"license.html":{}}}],["const",{"_index":88,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1522,"title":{},"body":{"license.html":{}}}],["constructcollage",{"_index":602,"title":{},"body":{"injectables/Collage.html":{}}}],["constructcollage(arr",{"_index":604,"title":{},"body":{"injectables/Collage.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{}}}],["constructor(aistorymodel",{"_index":173,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["constructor(aistoryservice",{"_index":918,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["constructor(amqpclient",{"_index":216,"title":{},"body":{"injectables/AmqpService.html":{}}}],["constructor(attachment",{"_index":896,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["constructor(helpservice",{"_index":710,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["constructor(httpservice",{"_index":47,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["constructor(images",{"_index":797,"title":{},"body":{"entities/Job.html":{}}}],["constructor(jobresolver",{"_index":423,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{}}}],["constructor(jobsresolver",{"_index":664,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{},"injectables/HelpInteractionCollector.html":{}}}],["constructor(sentryservice",{"_index":342,"title":{},"body":{"injectables/BotGateway.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["constructor(servicename",{"_index":650,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["constructor(status",{"_index":560,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["constructs",{"_index":606,"title":{},"body":{"injectables/Collage.html":{}}}],["construed",{"_index":1563,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1196,"title":{},"body":{"index.html":{}}}],["contained",{"_index":1550,"title":{},"body":{"license.html":{}}}],["container",{"_index":1272,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":1034,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["containers",{"_index":1295,"title":{},"body":{"index.html":{}}}],["containing",{"_index":439,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["contains",{"_index":1261,"title":{},"body":{"index.html":{}}}],["content",{"_index":483,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"license.html":{}}}],["contents",{"_index":1189,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":441,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["continue",{"_index":1282,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1399,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1194,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1450,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1511,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1326,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":1475,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1523,"title":{},"body":{"license.html":{}}}],["control",{"_index":1387,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1388,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["conversions",{"_index":1423,"title":{},"body":{"license.html":{}}}],["converts",{"_index":610,"title":{},"body":{"injectables/Collage.html":{}}}],["copies",{"_index":1530,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1535,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1380,"title":{},"body":{"license.html":{}}}],["couldnotgenerateartexception",{"_index":185,"title":{"classes/CouldNotGenerateArtException.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniService.html":{}}}],["couldnotgenerateartexception(dalleminiservice.name",{"_index":694,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["counterclaim",{"_index":1519,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":809,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{},"index.html":{}}}],["create(@args('createjobinput",{"_index":840,"title":{},"body":{"classes/JobResolver.html":{}}}],["create(createjobinput",{"_index":816,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["createcollage",{"_index":623,"title":{},"body":{"injectables/Collage.html":{}}}],["createcollage(options",{"_index":630,"title":{},"body":{"injectables/Collage.html":{}}}],["created",{"_index":122,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"changelog.html":{}}}],["createjobinput",{"_index":654,"title":{"classes/CreateJobInput.html":{}},"body":{"classes/CreateJobInput.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["creating",{"_index":841,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["creationpromise",{"_index":842,"title":{},"body":{"classes/JobResolver.html":{}}}],["credentials",{"_index":1306,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1517,"title":{},"body":{"license.html":{}}}],["curie",{"_index":109,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["custom",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["customary",{"_index":1589,"title":{},"body":{"license.html":{}}}],["customid",{"_index":727,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["d",{"_index":1548,"title":{},"body":{"license.html":{}}}],["dall",{"_index":61,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["dalle",{"_index":20,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{},"index.html":{}}}],["dalleminicommand",{"_index":19,"title":{"injectables/DalleMiniCommand.html":{}},"body":{"classes/AiArtCommand.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"overview.html":{}}}],["dalleminicommanddto",{"_index":667,"title":{"classes/DalleMiniCommandDto.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["dalleminimodel",{"_index":686,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["dalleminiservice",{"_index":665,"title":{"injectables/DalleMiniService.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["dall·e",{"_index":1364,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1626,"title":{},"body":{"license.html":{}}}],["dariuskralovic@protonmail.com",{"_index":1363,"title":{},"body":{"index.html":{}}}],["dark_fantasy",{"_index":1146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":89,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"changelog.html":{}}}],["data.images",{"_index":91,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["data.status",{"_index":550,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["database",{"_index":395,"title":{},"body":{"injectables/BotGateway.html":{},"entities/Job.html":{},"injectables/JobService.html":{},"changelog.html":{}}}],["date",{"_index":1527,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":232,"title":{},"body":{"injectables/AmqpService.html":{}}}],["date.now().tostring",{"_index":612,"title":{},"body":{"injectables/Collage.html":{}}}],["davinci",{"_index":104,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["davinci_instruct_beta",{"_index":947,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["dbrecord",{"_index":390,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord(dbrecord",{"_index":909,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord.messageid",{"_index":486,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["dbrecord.messagelink",{"_index":488,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["debug",{"_index":193,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["declare",{"_index":969,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["decorators",{"_index":349,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"classes/OpenAiCommandDto.html":{}}}],["decorators/includeinhelp.decorator",{"_index":449,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{}}}],["decorators/queued.decorator",{"_index":584,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["default",{"_index":178,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["defend",{"_index":1657,"title":{},"body":{"license.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"license.html":{}}}],["definition",{"_index":1391,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1374,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":1621,"title":{},"body":{"license.html":{}}}],["deliverymode",{"_index":260,"title":{},"body":{"injectables/AmqpService.html":{}}}],["demo",{"_index":1184,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":265,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1236,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1244,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1035,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["derivative",{"_index":1436,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1438,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1590,"title":{},"body":{"license.html":{}}}],["description",{"_index":26,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":1473,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1609,"title":{},"body":{"license.html":{}}}],["different",{"_index":1567,"title":{},"body":{"license.html":{}}}],["direct",{"_index":1394,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1397,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1592,"title":{},"body":{"license.html":{}}}],["discord",{"_index":12,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"dependencies.html":{},"index.html":{}}}],["discord.js",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"dependencies.html":{},"index.html":{}}}],["discord/discord.gateway",{"_index":708,"title":{},"body":{"modules/GatewayModule.html":{}}}],["discord_token",{"_index":1235,"title":{},"body":{"index.html":{}}}],["discordclient",{"_index":343,"title":{},"body":{"injectables/BotGateway.html":{}}}],["discordclientoptions",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["discordcommand",{"_index":717,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["discordmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["discordmodule.forfeature",{"_index":647,"title":{},"body":{"modules/CommandsModule.html":{}}}],["discordmodule.forrootasync",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["discordtransformedcommand",{"_index":444,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["discussing",{"_index":1468,"title":{},"body":{"license.html":{}}}],["dispatched",{"_index":735,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["dispatching",{"_index":386,"title":{},"body":{"injectables/BotGateway.html":{}}}],["display",{"_index":1494,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1497,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1357,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1373,"title":{},"body":{"license.html":{}}}],["dm",{"_index":416,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"index.html":{}}}],["docked",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":988,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docker/deploy/docker",{"_index":1297,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":1183,"title":{},"body":{"index.html":{}}}],["document",{"_index":1378,"title":{},"body":{"license.html":{}}}],["documentatin",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":1325,"title":{},"body":{"index.html":{},"license.html":{}}}],["don't",{"_index":1344,"title":{},"body":{"index.html":{},"license.html":{}}}],["drawn",{"_index":468,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["driver",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["dsn",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dto",{"_index":438,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["dto.model",{"_index":936,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["dto.prompt",{"_index":479,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["dto.style",{"_index":480,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["dto/create",{"_index":836,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["dto/update",{"_index":838,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["due",{"_index":940,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["duration",{"_index":569,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["dyno",{"_index":1249,"title":{},"body":{"index.html":{}}}],["e",{"_index":62,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["e.replace('data:image/png;base64",{"_index":575,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["e2%9c%89%ef%b8%8f",{"_index":383,"title":{},"body":{"injectables/BotGateway.html":{}}}],["each",{"_index":1482,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1270,"title":{},"body":{"index.html":{},"license.html":{}}}],["editorial",{"_index":1439,"title":{},"body":{"license.html":{}}}],["edward",{"_index":466,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["elaborations",{"_index":1442,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1457,"title":{},"body":{"license.html":{}}}],["embed",{"_index":766,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfield('\\u200b",{"_index":779,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfield('usage",{"_index":781,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfields(parameterfields",{"_index":780,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setauthor",{"_index":767,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setdescription(help.description",{"_index":771,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setfooter",{"_index":783,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.settitle(help.name",{"_index":770,"title":{},"body":{"injectables/HelpService.html":{}}}],["embedfield",{"_index":759,"title":{},"body":{"injectables/HelpService.html":{}}}],["embeds",{"_index":733,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["empty",{"_index":398,"title":{},"body":{"injectables/BotGateway.html":{}}}],["enclosed",{"_index":1667,"title":{},"body":{"license.html":{}}}],["encountered",{"_index":379,"title":{},"body":{"injectables/BotGateway.html":{}}}],["end",{"_index":1663,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":144,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["engine",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["enhancement",{"_index":1343,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":238,"title":{},"body":{"injectables/AmqpService.html":{}}}],["enter",{"_index":1229,"title":{},"body":{"index.html":{}}}],["entities",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"entities/Job.html":{},"license.html":{},"overview.html":{}}}],["entities/job.entity",{"_index":804,"title":{},"body":{"modules/JobModule.html":{},"injectables/JobService.html":{}}}],["entity",{"_index":788,"title":{"entities/Job.html":{}},"body":{"entities/Job.html":{},"license.html":{}}}],["entity/entity.module",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{}}}],["entity/job/entities/job.entity",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["entity/job/job.resolver",{"_index":366,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["entitymodule",{"_index":270,"title":{"modules/EntityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["enum",{"_index":510,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1126,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1027,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env:variable_name=value",{"_index":1292,"title":{},"body":{"index.html":{}}}],["env_name=value",{"_index":1289,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":981,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environment",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{}}}],["ephemeral",{"_index":734,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["err",{"_index":205,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["err.message",{"_index":492,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["error",{"_index":206,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{},"index.html":{}}}],["error.message",{"_index":375,"title":{},"body":{"injectables/BotGateway.html":{}}}],["etching",{"_index":1153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["even",{"_index":1269,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":1617,"title":{},"body":{"license.html":{}}}],["example",{"_index":1208,"title":{},"body":{"index.html":{},"license.html":{}}}],["examples",{"_index":1323,"title":{},"body":{"index.html":{}}}],["except",{"_index":1499,"title":{},"body":{"license.html":{}}}],["exception",{"_index":491,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["exceptions/couldnotgenerateartexception",{"_index":186,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["excluding",{"_index":1470,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1487,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1580,"title":{},"body":{"license.html":{}}}],["execution",{"_index":400,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["executioncontext",{"_index":433,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.channel.send",{"_index":482,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deferreply",{"_index":475,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deletereply",{"_index":481,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.followup",{"_index":494,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["exercise",{"_index":1615,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1411,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":1571,"title":{},"body":{"license.html":{}}}],["exploration",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1182,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["exports",{"_index":700,"title":{},"body":{"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}}}],["express",{"_index":1098,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":649,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{},"classes/UpdateJobInput.html":{}}}],["external",{"_index":1312,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":66,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["f",{"_index":1296,"title":{},"body":{"index.html":{}}}],["fail",{"_index":1253,"title":{},"body":{"index.html":{}}}],["failed",{"_index":207,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["fails",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1637,"title":{},"body":{"license.html":{}}}],["false",{"_index":258,"title":{},"body":{"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{}}}],["fantasy_art",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["feature",{"_index":1187,"title":{},"body":{"index.html":{}}}],["feature/amazingfeature",{"_index":1351,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1645,"title":{},"body":{"license.html":{}}}],["festive",{"_index":1150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetched",{"_index":393,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{}}}],["fetching",{"_index":844,"title":{},"body":{"classes/JobResolver.html":{}}}],["fields",{"_index":1666,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1403,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["filed",{"_index":1528,"title":{},"body":{"license.html":{}}}],["files",{"_index":408,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":1201,"title":{},"body":{"index.html":{}}}],["findall",{"_index":810,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findallpromise",{"_index":846,"title":{},"body":{"classes/JobResolver.html":{}}}],["findbymessageid",{"_index":864,"title":{},"body":{"injectables/JobService.html":{}}}],["findbymessageid(messageid",{"_index":870,"title":{},"body":{"injectables/JobService.html":{}}}],["finding",{"_index":880,"title":{},"body":{"injectables/JobService.html":{}}}],["findone",{"_index":811,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findone(@args('id",{"_index":848,"title":{},"body":{"classes/JobResolver.html":{}}}],["findone(id",{"_index":821,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findonebymessageid",{"_index":812,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonebymessageid(messageid",{"_index":824,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonebymessageidpromise",{"_index":851,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonepromise",{"_index":849,"title":{},"body":{"classes/JobResolver.html":{}}}],["finished",{"_index":203,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["finishreason",{"_index":98,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["fitness",{"_index":1605,"title":{},"body":{"license.html":{}}}],["fix",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":516,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["fn_index",{"_index":538,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["follow",{"_index":1286,"title":{},"body":{"index.html":{}}}],["following",{"_index":1533,"title":{},"body":{"license.html":{}}}],["forget",{"_index":1345,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1338,"title":{},"body":{"index.html":{}}}],["form",{"_index":421,"title":{},"body":{"injectables/CogView2Command.html":{},"license.html":{}}}],["format",{"_index":149,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{},"license.html":{}}}],["found",{"_index":397,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/JobService.html":{}}}],["frame_photo",{"_index":485,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["framework",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1217,"title":{},"body":{"index.html":{},"license.html":{}}}],["freedom",{"_index":677,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["frequency_penalty",{"_index":117,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["frequent",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["frowning",{"_index":495,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["full",{"_index":440,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["fully",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1170,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1215,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":367,"title":{},"body":{"injectables/BotGateway.html":{}}}],["gateway/discord/discord.gateway",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["gatewaymodule",{"_index":702,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["general",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":27,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["generated",{"_index":64,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"license.html":{}}}],["generates",{"_index":456,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["generating",{"_index":420,"title":{},"body":{"injectables/CogView2Command.html":{},"changelog.html":{},"index.html":{}}}],["generation",{"_index":198,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"classes/OpenAiCommandDto.html":{},"changelog.html":{},"index.html":{}}}],["getart",{"_index":172,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getart(headline",{"_index":176,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["getart(prompt",{"_index":580,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getasattachment",{"_index":603,"title":{},"body":{"injectables/Collage.html":{}}}],["getasattachment(name",{"_index":608,"title":{},"body":{"injectables/Collage.html":{}}}],["getattachment",{"_index":904,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getdbrecord",{"_index":900,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getenvvarvalue",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvarvalue(obj[key",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethelpatindex",{"_index":752,"title":{},"body":{"injectables/HelpService.html":{}}}],["gethelpatindex(index",{"_index":753,"title":{},"body":{"injectables/HelpService.html":{}}}],["getimagearray",{"_index":44,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["getimagearray(prompt",{"_index":54,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse",{"_index":45,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse(prompt",{"_index":69,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["getstory",{"_index":135,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getstory(prompt",{"_index":140,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getting",{"_index":975,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["ghibil",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["git",{"_index":1225,"title":{},"body":{"index.html":{}}}],["github",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["github:karafra/nestjs",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1199,"title":{},"body":{"index.html":{},"license.html":{}}}],["given",{"_index":459,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["goal_net",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["goodwill",{"_index":1634,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1685,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":1480,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1412,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1383,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1484,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphqlmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["greatly",{"_index":1334,"title":{},"body":{"index.html":{}}}],["grid",{"_index":598,"title":{},"body":{"injectables/Collage.html":{}}}],["grossly",{"_index":1622,"title":{},"body":{"license.html":{}}}],["group",{"_index":1321,"title":{},"body":{"index.html":{}}}],["groups",{"_index":1315,"title":{},"body":{"index.html":{}}}],["guest",{"_index":1308,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1287,"title":{},"body":{"index.html":{}}}],["guild",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["handler",{"_index":422,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["handler(dto",{"_index":431,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["handler(interaction",{"_index":713,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["handles",{"_index":436,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["handling",{"_index":426,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["harmless",{"_index":1659,"title":{},"body":{"license.html":{}}}],["hash",{"_index":547,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["haven't",{"_index":886,"title":{},"body":{"injectables/JobService.html":{}}}],["hd",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headers",{"_index":84,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["headline",{"_index":150,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{}}}],["height",{"_index":615,"title":{},"body":{"injectables/Collage.html":{}}}],["help",{"_index":646,"title":{},"body":{"modules/CommandsModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["help.parameters.foreach((parameter",{"_index":773,"title":{},"body":{"injectables/HelpService.html":{}}}],["help.usage",{"_index":782,"title":{},"body":{"injectables/HelpService.html":{}}}],["help/help.command",{"_index":644,"title":{},"body":{"modules/CommandsModule.html":{}}}],["helpcommand",{"_index":638,"title":{"injectables/HelpCommand.html":{}},"body":{"modules/CommandsModule.html":{},"injectables/HelpCommand.html":{},"overview.html":{}}}],["helpinteractioncollector",{"_index":721,"title":{"injectables/HelpInteractionCollector.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["helpservice",{"_index":711,"title":{"injectables/HelpService.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["here",{"_index":1202,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1483,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1576,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":1242,"title":{},"body":{"index.html":{}}}],["hold",{"_index":1658,"title":{},"body":{"license.html":{}}}],["homer",{"_index":463,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["http://bf.dallemini.ai/generate",{"_index":83,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["http://www.apache.org/licenses",{"_index":1369,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1682,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":916,"title":{},"body":{"modules/ModelsModule.html":{}}}],["https://api.openai.com/v1/completions",{"_index":162,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["https://discord.com/api/oauth2/authorize?client_id={client_id}&permissions=34816&scope=applications.commands%20bot",{"_index":1257,"title":{},"body":{"index.html":{}}}],["https://discord.com/developers",{"_index":1219,"title":{},"body":{"index.html":{}}}],["https://github.com/karafra/ai",{"_index":769,"title":{},"body":{"injectables/HelpService.html":{},"index.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/push",{"_index":537,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/status",{"_index":549,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://raw.githubusercontent.com/karafra/ai",{"_index":756,"title":{},"body":{"injectables/HelpService.html":{}}}],["httpservice",{"_index":48,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["icogview2data",{"_index":561,"title":{"interfaces/ICogView2Data.html":{}},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2request",{"_index":532,"title":{"interfaces/ICogView2Request.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2response",{"_index":533,"title":{"interfaces/ICogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2responseacknowledged",{"_index":534,"title":{"interfaces/ICogView2ResponseAcknowledged.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icommandhelp",{"_index":761,"title":{"interfaces/ICommandHelp.html":{}},"body":{"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icommandparameter",{"_index":787,"title":{"interfaces/ICommandParameter.html":{}},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["iconurl",{"_index":751,"title":{},"body":{"injectables/HelpService.html":{}}}],["id",{"_index":120,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"index.html":{}}}],["identification",{"_index":1677,"title":{},"body":{"license.html":{}}}],["identifying",{"_index":1670,"title":{},"body":{"license.html":{}}}],["ii",{"_index":1401,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1408,"title":{},"body":{"license.html":{}}}],["image",{"_index":67,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"index.html":{}}}],["imageheight",{"_index":618,"title":{},"body":{"injectables/Collage.html":{}}}],["images",{"_index":28,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"modules/CommandsModule.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"changelog.html":{},"index.html":{}}}],["images.map",{"_index":409,"title":{},"body":{"injectables/BotGateway.html":{}}}],["imagewidth",{"_index":616,"title":{},"body":{"injectables/Collage.html":{}}}],["implements",{"_index":472,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2Response.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"injectables/OpenAiCommand.html":{}}}],["implied",{"_index":1601,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"license.html":{}}}],["important",{"_index":1247,"title":{},"body":{"index.html":{}}}],["imports",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["improve",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["improving",{"_index":1469,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1632,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1628,"title":{},"body":{"license.html":{}}}],["include",{"_index":31,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["included",{"_index":1431,"title":{},"body":{"license.html":{}}}],["includeinhelp",{"_index":448,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/functions.html":{}}}],["includeinhelp(help",{"_index":1177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":1549,"title":{},"body":{"license.html":{}}}],["including",{"_index":1416,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1454,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1478,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1660,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1656,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1647,"title":{},"body":{"license.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1429,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1395,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1410,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{}}}],["information",{"_index":1361,"title":{},"body":{"index.html":{},"license.html":{}}}],["informational",{"_index":1558,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1510,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1524,"title":{},"body":{"license.html":{}}}],["ini",{"_index":673,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["inject",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":35,"title":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["injectables",{"_index":37,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"overview.html":{}}}],["injectamqpclient",{"_index":233,"title":{},"body":{"injectables/AmqpService.html":{}}}],["injectdiscordclient",{"_index":361,"title":{},"body":{"injectables/BotGateway.html":{}}}],["injectrepository",{"_index":876,"title":{},"body":{"injectables/JobService.html":{}}}],["injectrepository(job",{"_index":877,"title":{},"body":{"injectables/JobService.html":{}}}],["injectsentry",{"_index":182,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["inline",{"_index":778,"title":{},"body":{"injectables/HelpService.html":{}}}],["inspire",{"_index":1333,"title":{},"body":{"index.html":{}}}],["install",{"_index":1212,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1193,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1514,"title":{},"body":{"license.html":{}}}],["instruct",{"_index":105,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["intentionally",{"_index":1452,"title":{},"body":{"license.html":{}}}],["intents",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_messages",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guilds",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["interaction",{"_index":716,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{}}}],["interaction.customid",{"_index":746,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interaction.deferreply",{"_index":934,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.followup",{"_index":939,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.followup(story",{"_index":937,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.reply",{"_index":732,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["interaction.update",{"_index":749,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interactioneventcollector",{"_index":743,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interface",{"_index":92,"title":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["interfaces",{"_index":94,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":941,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["invite",{"_index":1254,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":1490,"title":{},"body":{"license.html":{}}}],["iscompleted",{"_index":559,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["isometric",{"_index":520,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["issue",{"_index":1341,"title":{},"body":{"index.html":{},"license.html":{}}}],["item",{"_index":224,"title":{},"body":{"injectables/AmqpService.html":{}}}],["january",{"_index":1367,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1207,"title":{},"body":{"index.html":{}}}],["job",{"_index":297,"title":{"entities/Job.html":{}},"body":{"modules/AppModule.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["job.input",{"_index":837,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts",{"_index":656,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts:2",{"_index":659,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:3",{"_index":662,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:4",{"_index":661,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:5",{"_index":660,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.resolver",{"_index":805,"title":{},"body":{"modules/JobModule.html":{}}}],["job.service",{"_index":806,"title":{},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{}}}],["job/job.module",{"_index":701,"title":{},"body":{"modules/EntityModule.html":{}}}],["jobmodule",{"_index":698,"title":{"modules/JobModule.html":{}},"body":{"modules/EntityModule.html":{},"modules/JobModule.html":{},"modules.html":{},"overview.html":{}}}],["jobresolver",{"_index":346,"title":{"classes/JobResolver.html":{}},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"overview.html":{}}}],["jobs",{"_index":845,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["jobservice",{"_index":802,"title":{"injectables/JobService.html":{}},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"overview.html":{}}}],["jobsresolver",{"_index":345,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["joining",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["json.parse(message?.bodytostring",{"_index":255,"title":{},"body":{"injectables/AmqpService.html":{}}}],["july",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["karafra",{"_index":454,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"license.html":{}}}],["karafra/nestjs",{"_index":234,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["karafro",{"_index":1362,"title":{},"body":{"index.html":{}}}],["key",{"_index":1218,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1600,"title":{},"body":{"license.html":{}}}],["label",{"_index":729,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["language",{"_index":1684,"title":{},"body":{"license.html":{}}}],["lastdispatch",{"_index":212,"title":{},"body":{"injectables/AmqpService.html":{}}}],["later",{"_index":499,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["law",{"_index":1595,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1520,"title":{},"body":{"license.html":{}}}],["leading",{"_index":675,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["learn",{"_index":1332,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1384,"title":{},"body":{"license.html":{}}}],["level",{"_index":192,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["liability",{"_index":1616,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1625,"title":{},"body":{"license.html":{}}}],["liberty",{"_index":674,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["library",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["licensable",{"_index":1508,"title":{},"body":{"license.html":{}}}],["license",{"_index":1195,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1679,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1525,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1379,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1602,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1686,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1417,"title":{},"body":{"license.html":{}}}],["link",{"_index":1256,"title":{},"body":{"index.html":{},"license.html":{}}}],["linux",{"_index":1290,"title":{},"body":{"index.html":{}}}],["list",{"_index":1209,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1463,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1698,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":1515,"title":{},"body":{"license.html":{}}}],["load",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["loads",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["logger",{"_index":171,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{}}}],["logger(aistoryservice.name",{"_index":181,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["logger(botgateway.name",{"_index":360,"title":{},"body":{"injectables/BotGateway.html":{}}}],["logger(cogview2command.name",{"_index":442,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["logger(cogview2service.name",{"_index":583,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["logger(dalleminicommand.name",{"_index":669,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["logger(dalleminiservice.name",{"_index":690,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["logger(openaicommand.name",{"_index":922,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["logging",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["login",{"_index":1305,"title":{},"body":{"index.html":{}}}],["loglevels",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["logprobs",{"_index":99,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["looks",{"_index":1277,"title":{},"body":{"index.html":{}}}],["loss",{"_index":1633,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1640,"title":{},"body":{"license.html":{}}}],["loud_sound",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["m",{"_index":946,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1427,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1462,"title":{},"body":{"license.html":{}}}],["mainbody",{"_index":514,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["make",{"_index":1327,"title":{},"body":{"index.html":{},"license.html":{}}}],["making",{"_index":1414,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1638,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1466,"title":{},"body":{"license.html":{}}}],["management",{"_index":1302,"title":{},"body":{"index.html":{},"license.html":{}}}],["marked",{"_index":1472,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1586,"title":{},"body":{"license.html":{}}}],["matching",{"_index":34,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":540,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["math.random().tostring(36).slice(2",{"_index":545,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["max_tokens",{"_index":116,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["mean",{"_index":1376,"title":{},"body":{"license.html":{}}}],["means",{"_index":1392,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1419,"title":{},"body":{"license.html":{}}}],["media",{"_index":1424,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1531,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1532,"title":{},"body":{"license.html":{}}}],["memo",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["mention",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1604,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1448,"title":{},"body":{"license.html":{}}}],["message",{"_index":194,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{}}}],["message.id",{"_index":487,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["message.url",{"_index":489,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["messageactionrow",{"_index":363,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageactionrow().addcomponents",{"_index":403,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messageattachment",{"_index":364,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachment(buffer",{"_index":633,"title":{},"body":{"injectables/Collage.html":{}}}],["messageattachmentwithdbrecord",{"_index":587,"title":{"classes/MessageAttachmentWithDbRecord.html":{}},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachmentwithdbrecord(attachment",{"_index":594,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["messageattachmentwithdbrecord.attachment",{"_index":680,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["messagebutton",{"_index":365,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageembed",{"_index":755,"title":{},"body":{"injectables/HelpService.html":{}}}],["messageid",{"_index":658,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["messagelink",{"_index":401,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CreateJobInput.html":{},"entities/Job.html":{}}}],["messagereaction",{"_index":354,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.emoji.identifier",{"_index":382,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.author.id",{"_index":384,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.id",{"_index":392,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.remove",{"_index":389,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messages",{"_index":414,"title":{},"body":{"injectables/BotGateway.html":{},"index.html":{}}}],["metadata",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1241,"title":{},"body":{"index.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["mini",{"_index":63,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["mini.command",{"_index":22,"title":{},"body":{"classes/AiArtCommand.html":{},"modules/CommandsModule.html":{}}}],["mini.command.ts",{"_index":663,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:37",{"_index":666,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:45",{"_index":668,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto",{"_index":672,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto.ts",{"_index":682,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.dto.ts:10",{"_index":683,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.service",{"_index":671,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"modules/ServicesModule.html":{}}}],["mini.service.ts",{"_index":685,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:13",{"_index":687,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:22",{"_index":689,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini/dalle",{"_index":21,"title":{},"body":{"classes/AiArtCommand.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{}}}],["minimal",{"_index":1262,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1125,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":103,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["models/ai",{"_index":187,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/DalleMiniService.html":{}}}],["models/cog",{"_index":585,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["models/models.module",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["modelsmodule",{"_index":271,"title":{"modules/ModelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["modifications",{"_index":1415,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1536,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1559,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1564,"title":{},"body":{"license.html":{}}}],["modularindex",{"_index":763,"title":{},"body":{"injectables/HelpService.html":{}}}],["module",{"_index":262,"title":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}}}],["modules",{"_index":264,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":984,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mongodb",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["mongorepository",{"_index":866,"title":{},"body":{"injectables/JobService.html":{}}}],["monocle_face",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["moonwalker",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":146,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{},"license.html":{}}}],["munch",{"_index":467,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["mutation",{"_index":834,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('createjob",{"_index":817,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('removejob",{"_index":827,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('updatejob",{"_index":831,"title":{},"body":{"classes/JobResolver.html":{}}}],["mystical",{"_index":1148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["n\\n",{"_index":484,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":1585,"title":{},"body":{"license.html":{}}}],["name}.png",{"_index":634,"title":{},"body":{"injectables/Collage.html":{}}}],["necessarily",{"_index":1509,"title":{},"body":{"license.html":{}}}],["necktie",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":1078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":1301,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1620,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1623,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":996,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":71,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{},"modules/ModelsModule.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":72,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":152,"title":{},"body":{"injectables/AiStoryModel.html":{},"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":13,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"classes/JobResolver.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":966,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"dependencies.html":{}}}],["network",{"_index":1311,"title":{},"body":{"index.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{}}}],["next",{"_index":731,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"index.html":{}}}],["no_style",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noack",{"_index":253,"title":{},"body":{"injectables/AmqpService.html":{}}}],["non",{"_index":387,"title":{},"body":{"injectables/BotGateway.html":{},"license.html":{}}}],["none",{"_index":513,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["normally",{"_index":1556,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1575,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1430,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1539,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1573,"title":{},"body":{"license.html":{}}}],["now",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1227,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1214,"title":{},"body":{"index.html":{}}}],["npmnpm",{"_index":1213,"title":{},"body":{"index.html":{}}}],["ntegral/nestjs",{"_index":183,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"dependencies.html":{}}}],["null",{"_index":102,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/BotGateway.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"injectables/JobService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":101,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AmqpService.html":{},"classes/CogView2Response.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["obj",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj[key",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":121,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj).foreach((key",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectidcolumn",{"_index":790,"title":{},"body":{"entities/Job.html":{}}}],["obligations",{"_index":1648,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1681,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1502,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1318,"title":{},"body":{"index.html":{}}}],["oil",{"_index":518,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["on('collect",{"_index":741,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["on('error",{"_index":350,"title":{},"body":{"injectables/BotGateway.html":{}}}],["on('messagereactionadd",{"_index":356,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once",{"_index":362,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once('ready",{"_index":358,"title":{},"body":{"injectables/BotGateway.html":{}}}],["oncollect",{"_index":737,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["oncollect(interaction",{"_index":739,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["one",{"_index":1232,"title":{},"body":{"index.html":{},"license.html":{}}}],["onerror",{"_index":339,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onerror(error",{"_index":348,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd",{"_index":340,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd(messagereaction",{"_index":353,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onready",{"_index":341,"title":{},"body":{"injectables/BotGateway.html":{}}}],["open",{"_index":128,"title":{},"body":{"classes/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["openai",{"_index":143,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{}}}],["openai.token",{"_index":166,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["openaicommand",{"_index":127,"title":{"injectables/OpenAiCommand.html":{}},"body":{"classes/AiStoryCommand.html":{},"modules/CommandsModule.html":{},"injectables/OpenAiCommand.html":{},"overview.html":{}}}],["openaicommanddto",{"_index":920,"title":{"classes/OpenAiCommandDto.html":{}},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["openaimodel",{"_index":931,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["operation",{"_index":887,"title":{},"body":{"injectables/JobService.html":{}}}],["operation.value",{"_index":890,"title":{},"body":{"injectables/JobService.html":{}}}],["optional",{"_index":53,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":601,"title":{},"body":{"injectables/Collage.html":{}}}],["options.sources",{"_index":627,"title":{},"body":{"injectables/Collage.html":{}}}],["origin",{"_index":1356,"title":{},"body":{"index.html":{},"license.html":{}}}],["original",{"_index":1445,"title":{},"body":{"license.html":{}}}],["os",{"_index":1291,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1400,"title":{},"body":{"license.html":{}}}],["out",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1074,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["outside",{"_index":1313,"title":{},"body":{"index.html":{}}}],["outstanding",{"_index":1406,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1690,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1381,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1402,"title":{},"body":{"license.html":{}}}],["package",{"_index":1086,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1228,"title":{},"body":{"index.html":{}}}],["page",{"_index":784,"title":{},"body":{"injectables/HelpService.html":{},"license.html":{}}}],["param",{"_index":87,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/variables.html":{}}}],["param({name",{"_index":501,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{}}}],["parameter.description",{"_index":777,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.name",{"_index":775,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.optional",{"_index":776,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields",{"_index":772,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields.push",{"_index":774,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["paramspattern",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paramtype",{"_index":509,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["paramtype.string",{"_index":523,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["parentheses",{"_index":1240,"title":{},"body":{"index.html":{}}}],["parses",{"_index":142,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["part",{"_index":1547,"title":{},"body":{"license.html":{}}}],["partialtype",{"_index":965,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["partialtype(createjobinput",{"_index":968,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["particular",{"_index":1606,"title":{},"body":{"license.html":{}}}],["party",{"_index":1555,"title":{},"body":{"license.html":{}}}],["password",{"_index":1309,"title":{},"body":{"index.html":{}}}],["pastel",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patent",{"_index":1498,"title":{},"body":{"license.html":{}}}],["payload",{"_index":445,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["pending",{"_index":567,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["people",{"_index":676,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["percent",{"_index":1404,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1495,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1583,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1265,"title":{},"body":{"index.html":{},"license.html":{}}}],["perpetual",{"_index":1485,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1546,"title":{},"body":{"license.html":{}}}],["photo",{"_index":515,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ping",{"_index":371,"title":{},"body":{"injectables/BotGateway.html":{}}}],["place",{"_index":1331,"title":{},"body":{"index.html":{}}}],["places",{"_index":1551,"title":{},"body":{"license.html":{}}}],["please",{"_index":498,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["png",{"_index":412,"title":{},"body":{"injectables/BotGateway.html":{}}}],["policy",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["popfromqueue",{"_index":213,"title":{},"body":{"injectables/AmqpService.html":{}}}],["popfromqueue(queuename",{"_index":219,"title":{},"body":{"injectables/AmqpService.html":{}}}],["port",{"_index":1237,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1642,"title":{},"body":{"license.html":{}}}],["power",{"_index":1393,"title":{},"body":{"license.html":{}}}],["predict",{"_index":543,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["preferred",{"_index":1413,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1492,"title":{},"body":{"license.html":{}}}],["prerequisites",{"_index":1192,"title":{},"body":{"index.html":{}}}],["presence_penalty",{"_index":118,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["present",{"_index":239,"title":{},"body":{"injectables/AmqpService.html":{}}}],["previous",{"_index":728,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["primary",{"_index":730,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["printed",{"_index":1676,"title":{},"body":{"license.html":{}}}],["privacy",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":153,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{}}}],["process",{"_index":496,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{}}}],["process.env[param[1",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processing",{"_index":693,"title":{},"body":{"injectables/DalleMiniService.html":{},"changelog.html":{}}}],["produced",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1587,"title":{},"body":{"license.html":{}}}],["production",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":1190,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1538,"title":{},"body":{"license.html":{}}}],["promise",{"_index":65,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["promise((f",{"_index":552,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["promise((resolve",{"_index":249,"title":{},"body":{"injectables/AmqpService.html":{}}}],["prompt",{"_index":30,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"properties.html":{}}}],["provenance",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provide",{"_index":1566,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1433,"title":{},"body":{"license.html":{}}}],["providers",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}}}],["provides",{"_index":1597,"title":{},"body":{"license.html":{}}}],["psychedelic",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["psychic",{"_index":1145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":42,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["publicly",{"_index":1493,"title":{},"body":{"license.html":{}}}],["publishtoqueue",{"_index":214,"title":{},"body":{"injectables/AmqpService.html":{}}}],["publishtoqueue(queuename",{"_index":223,"title":{},"body":{"injectables/AmqpService.html":{}}}],["pull",{"_index":1339,"title":{},"body":{"index.html":{}}}],["purge",{"_index":231,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgedqueues",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purgequeue",{"_index":215,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgequeue(queuename",{"_index":226,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purges",{"_index":229,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purpose",{"_index":1467,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1390,"title":{},"body":{"license.html":{}}}],["push",{"_index":1355,"title":{},"body":{"index.html":{}}}],["query",{"_index":497,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/JobResolver.html":{},"index.html":{}}}],["query('job",{"_index":822,"title":{},"body":{"classes/JobResolver.html":{}}}],["query('jobs",{"_index":819,"title":{},"body":{"classes/JobResolver.html":{}}}],["querying",{"_index":884,"title":{},"body":{"injectables/JobService.html":{}}}],["queue",{"_index":230,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.get",{"_index":252,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.publish(json.stringify",{"_index":259,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue_position",{"_index":571,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["queued",{"_index":568,"title":{},"body":{"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queued(cogview2service.name",{"_index":581,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["queued(dalleminiservice.name",{"_index":688,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["queued(queuename",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queueing",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["queuename",{"_index":222,"title":{},"body":{"injectables/AmqpService.html":{},"miscellaneous/functions.html":{}}}],["rabbit",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1037,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["random",{"_index":132,"title":{},"body":{"classes/AiStoryCommand.html":{}}}],["raw",{"_index":58,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["react",{"_index":1317,"title":{},"body":{"index.html":{}}}],["reaction",{"_index":380,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["readability",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["readable",{"_index":147,"title":{},"body":{"injectables/AiStoryModel.html":{},"license.html":{}}}],["readonly",{"_index":79,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["reason",{"_index":1662,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1588,"title":{},"body":{"license.html":{}}}],["received",{"_index":1476,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1534,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1674,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":1243,"title":{},"body":{"index.html":{}}}],["record",{"_index":394,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Service.html":{}}}],["redistributing",{"_index":1611,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1529,"title":{},"body":{"license.html":{}}}],["refer",{"_index":1324,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":1581,"title":{},"body":{"license.html":{}}}],["related",{"_index":388,"title":{},"body":{"injectables/BotGateway.html":{}}}],["release",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["remain",{"_index":1446,"title":{},"body":{"license.html":{}}}],["remove",{"_index":813,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["remove(@args('id",{"_index":858,"title":{},"body":{"classes/JobResolver.html":{}}}],["remove(id",{"_index":826,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["removed",{"_index":862,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["removepromise",{"_index":860,"title":{},"body":{"classes/JobResolver.html":{}}}],["removing",{"_index":859,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["replaced",{"_index":1669,"title":{},"body":{"license.html":{}}}],["replaceenvvars",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaceenvvars(obj[key",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repo",{"_index":1224,"title":{},"body":{"index.html":{}}}],["report",{"_index":1185,"title":{},"body":{"index.html":{}}}],["reporter",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":430,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["repository",{"_index":865,"title":{},"body":{"injectables/JobService.html":{}}}],["represent",{"_index":1443,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1461,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1491,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1591,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1372,"title":{},"body":{"license.html":{}}}],["request",{"_index":1186,"title":{},"body":{"index.html":{}}}],["requestbody",{"_index":155,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["requests",{"_index":428,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["required",{"_index":503,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"license.html":{}}}],["requires",{"_index":1316,"title":{},"body":{"index.html":{}}}],["reset",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["resolver",{"_index":835,"title":{},"body":{"classes/JobResolver.html":{}}}],["resolver('job",{"_index":839,"title":{},"body":{"classes/JobResolver.html":{}}}],["response",{"_index":145,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{}}}],["response.data.data).getimagearray",{"_index":556,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["response.data.hash",{"_index":548,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["responsibility",{"_index":1654,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1608,"title":{},"body":{"license.html":{}}}],["restart",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":878,"title":{},"body":{"injectables/JobService.html":{},"license.html":{}}}],["result.length",{"_index":882,"title":{},"body":{"injectables/JobService.html":{}}}],["resulting",{"_index":1418,"title":{},"body":{"license.html":{}}}],["results",{"_index":33,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1543,"title":{},"body":{"license.html":{}}}],["return",{"_index":80,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":57,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/functions.html":{}}}],["revisions",{"_index":1440,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1650,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["risks",{"_index":1613,"title":{},"body":{"license.html":{}}}],["robot",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["rosegold",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":725,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["royalty",{"_index":1489,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["s_dali",{"_index":1155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":1675,"title":{},"body":{"license.html":{}}}],["save",{"_index":1222,"title":{},"body":{"index.html":{}}}],["scopes",{"_index":1263,"title":{},"body":{"index.html":{}}}],["scoping",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["scream",{"_index":465,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["section",{"_index":1501,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1377,"title":{},"body":{"license.html":{}}}],["see",{"_index":1360,"title":{},"body":{"index.html":{},"license.html":{}}}],["selectedmodel",{"_index":154,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["sell",{"_index":1503,"title":{},"body":{"license.html":{}}}],["send",{"_index":1266,"title":{},"body":{"index.html":{}}}],["sendable",{"_index":611,"title":{},"body":{"injectables/Collage.html":{}}}],["sent",{"_index":415,"title":{},"body":{"injectables/BotGateway.html":{},"license.html":{}}}],["sentry",{"_index":184,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"dependencies.html":{},"index.html":{}}}],["sentry.io",{"_index":1009,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sentry/node",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":1231,"title":{},"body":{"index.html":{}}}],["sentrymodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule.forrootasync",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["sentryservice",{"_index":174,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["sentryservice.instance().addbreadcrumb",{"_index":189,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["separable",{"_index":1447,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1578,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1314,"title":{},"body":{"index.html":{}}}],["server",{"_index":1107,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":191,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"license.html":{}}}],["servicename",{"_index":652,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["services",{"_index":1300,"title":{},"body":{"index.html":{}}}],["services/commands/art/cog",{"_index":450,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["services/commands/art/dalle",{"_index":670,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["services/commands/help/help.service",{"_index":720,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["services/commands/story/ai",{"_index":923,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["services/services.module",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["servicesmodule",{"_index":272,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["session_hash",{"_index":544,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["set",{"_index":889,"title":{},"body":{"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"index.html":{}}}],["setattachment(attachment",{"_index":906,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setdbrecord(dbrecord",{"_index":902,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setlabel('jump",{"_index":406,"title":{},"body":{"injectables/BotGateway.html":{}}}],["setstyle('link",{"_index":404,"title":{},"body":{"injectables/BotGateway.html":{}}}],["settimeout(f",{"_index":553,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{}}}],["settimeout(resolve",{"_index":250,"title":{},"body":{"injectables/AmqpService.html":{}}}],["settlin/collage",{"_index":624,"title":{},"body":{"injectables/Collage.html":{},"dependencies.html":{}}}],["seturl(messagelink",{"_index":405,"title":{},"body":{"injectables/BotGateway.html":{}}}],["shall",{"_index":1375,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1407,"title":{},"body":{"license.html":{}}}],["short",{"_index":930,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["showing",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["shutdown",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":1278,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1198,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1340,"title":{},"body":{"index.html":{}}}],["simpson",{"_index":464,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["sketch",{"_index":519,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["softly",{"_index":228,"title":{},"body":{"injectables/AmqpService.html":{}}}],["software",{"_index":1211,"title":{},"body":{"index.html":{},"license.html":{}}}],["sole",{"_index":1653,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1607,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"license.html":{}}}],["sources",{"_index":621,"title":{},"body":{"injectables/Collage.html":{}}}],["spacing",{"_index":619,"title":{},"body":{"injectables/Collage.html":{}}}],["special",{"_index":1627,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1683,"title":{},"body":{"license.html":{}}}],["src/.../ai",{"_index":1696,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cog",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../cogview2.ts",{"_index":1695,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../includeinhelp.decorator.ts",{"_index":1173,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../open",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../queued.decorator.ts",{"_index":1174,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wombodream.ts",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../yamlconfigurationloader.ts",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commands/ai",{"_index":6,"title":{},"body":{"classes/AiArtCommand.html":{},"classes/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/commands/commands.module.ts",{"_index":639,"title":{},"body":{"modules/CommandsModule.html":{}}}],["src/commands/help/collectors/help.collector.ts",{"_index":736,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:13",{"_index":742,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:9",{"_index":738,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/help.command.ts",{"_index":709,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:19",{"_index":712,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:25",{"_index":715,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/config/yamlconfigurationloader.ts",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/decorators/includeinhelp.decorator.ts",{"_index":1176,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/queued.decorator.ts",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/entity/entity.module.ts",{"_index":699,"title":{},"body":{"modules/EntityModule.html":{}}}],["src/entity/job/dto/create",{"_index":655,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["src/entity/job/dto/update",{"_index":964,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["src/entity/job/entities/job.entity.ts",{"_index":789,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:12",{"_index":794,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:15",{"_index":795,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:6",{"_index":791,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:9",{"_index":793,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/job.module.ts",{"_index":803,"title":{},"body":{"modules/JobModule.html":{}}}],["src/entity/job/job.resolver.ts",{"_index":808,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:100",{"_index":828,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:16",{"_index":818,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:32",{"_index":820,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:48",{"_index":823,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:64",{"_index":825,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:8",{"_index":815,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:81",{"_index":832,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.service.ts",{"_index":863,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:10",{"_index":867,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:115",{"_index":873,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:18",{"_index":868,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:33",{"_index":869,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:48",{"_index":871,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:67",{"_index":872,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:89",{"_index":875,"title":{},"body":{"injectables/JobService.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts",{"_index":648,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts:1",{"_index":651,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/gateway/discord/discord.gateway.ts",{"_index":338,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:16",{"_index":347,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:27",{"_index":359,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:38",{"_index":351,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:50",{"_index":357,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/gateway.module.ts",{"_index":707,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/main.ts",{"_index":1175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/models/ai",{"_index":38,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{}}}],["src/models/cog",{"_index":526,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["src/models/models.module.ts",{"_index":915,"title":{},"body":{"modules/ModelsModule.html":{}}}],["src/services/amqp/amqp.service.ts",{"_index":211,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:16",{"_index":227,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:24",{"_index":220,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:38",{"_index":225,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:6",{"_index":218,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/commands/art/cog",{"_index":577,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["src/services/commands/art/dalle",{"_index":684,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["src/services/commands/help/help.service.ts",{"_index":750,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:10",{"_index":754,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:8",{"_index":758,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/story/ai",{"_index":169,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["src/services/services.module.ts",{"_index":958,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/types/api/ai",{"_index":95,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts",{"_index":557,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts:27",{"_index":563,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:28",{"_index":562,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:34",{"_index":565,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:38",{"_index":564,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/wombodream.ts",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/command/help.ts",{"_index":786,"title":{},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts",{"_index":892,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:12",{"_index":903,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:16",{"_index":905,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:20",{"_index":907,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:22",{"_index":897,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:4",{"_index":898,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:6",{"_index":899,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:8",{"_index":901,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/utilities/collage/collage.ts",{"_index":596,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:14",{"_index":622,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:22",{"_index":613,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:29",{"_index":605,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:42",{"_index":609,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/utilities.module.ts",{"_index":973,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["star",{"_index":1346,"title":{},"body":{"index.html":{}}}],["start",{"_index":1298,"title":{},"body":{"index.html":{}}}],["started",{"_index":197,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{}}}],["state",{"_index":1572,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1500,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1565,"title":{},"body":{"license.html":{}}}],["static",{"_index":600,"title":{},"body":{"injectables/Collage.html":{}}}],["stating",{"_index":1540,"title":{},"body":{"license.html":{}}}],["status",{"_index":558,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["steampunk",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["step",{"_index":1283,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":1635,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":243,"title":{},"body":{"injectables/AmqpService.html":{}}}],["stopping",{"_index":399,"title":{},"body":{"injectables/BotGateway.html":{}}}],["stories",{"_index":645,"title":{},"body":{"modules/CommandsModule.html":{}}}],["story",{"_index":131,"title":{},"body":{"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"changelog.html":{},"index.html":{}}}],["story.command",{"_index":642,"title":{},"body":{"modules/CommandsModule.html":{}}}],["story.command.ts",{"_index":126,"title":{},"body":{"classes/AiStoryCommand.html":{}}}],["story.model",{"_index":188,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{}}}],["story.model.ts",{"_index":134,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:12",{"_index":137,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:18",{"_index":138,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:53",{"_index":141,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.service",{"_index":924,"title":{},"body":{"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story.service.ts",{"_index":170,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:22",{"_index":177,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:9",{"_index":175,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.ts",{"_index":96,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["story/ai",{"_index":125,"title":{},"body":{"classes/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story/open",{"_index":643,"title":{},"body":{"modules/CommandsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":55,"title":{},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(date.now",{"_index":411,"title":{},"body":{"injectables/BotGateway.html":{}}}],["string(value).match(paramspattern",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string).data",{"_index":256,"title":{},"body":{"injectables/AmqpService.html":{}}}],["strings",{"_index":68,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["style",{"_index":200,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["styleused",{"_index":536,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["subcommand",{"_index":446,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["subject",{"_index":1481,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1496,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1569,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1455,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1453,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1477,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":1030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["successful",{"_index":1248,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":417,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["such",{"_index":1329,"title":{},"body":{"index.html":{},"license.html":{}}}],["suggestion",{"_index":1336,"title":{},"body":{"index.html":{}}}],["super",{"_index":653,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["supersede",{"_index":1577,"title":{},"body":{"license.html":{}}}],["support",{"_index":1008,"title":{},"body":{"changelog.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":511,"title":{},"body":{"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":1238,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1688,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["switched",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["syntax",{"_index":1673,"title":{},"body":{"license.html":{}}}],["synthwave",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["systems",{"_index":1464,"title":{},"body":{"license.html":{}}}],["t",{"_index":221,"title":{},"body":{"injectables/AmqpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["tab",{"_index":1221,"title":{},"body":{"index.html":{}}}],["table",{"_index":1188,"title":{},"body":{"index.html":{}}}],["tag",{"_index":1342,"title":{},"body":{"index.html":{}}}],["tell",{"_index":926,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["tells",{"_index":1178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["temperature",{"_index":115,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["terminal",{"_index":1276,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1526,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1370,"title":{},"body":{"license.html":{}}}],["testing",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":100,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"modules/CommandsModule.html":{},"injectables/HelpService.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["text_ada_001",{"_index":952,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_babage_001",{"_index":951,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_curie_001",{"_index":950,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_001",{"_index":948,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_002",{"_index":949,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["thanks",{"_index":1347,"title":{},"body":{"index.html":{}}}],["theory",{"_index":1618,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1449,"title":{},"body":{"license.html":{}}}],["things",{"_index":1210,"title":{},"body":{"index.html":{}}}],["third",{"_index":1554,"title":{},"body":{"license.html":{}}}],["this._dbrecord",{"_index":908,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this._messageattachment",{"_index":910,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this.aistorymodel.getstory(headline",{"_index":202,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["this.aistoryservice.getart(dto.headline",{"_index":935,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.amqpclient.channel",{"_index":237,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.canvas",{"_index":629,"title":{},"body":{"injectables/Collage.html":{}}}],["this.canvas.tobuffer('image/png",{"_index":632,"title":{},"body":{"injectables/Collage.html":{}}}],["this.cogview2model.getimagearray(prompt",{"_index":590,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.cogview2service.getart",{"_index":478,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.collage.constructcollage(response",{"_index":591,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.collage.getasattachment",{"_index":592,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.configservice.get",{"_index":165,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["this.dalleminiservice.getart",{"_index":679,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.data",{"_index":572,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.data.data[2].map((e",{"_index":574,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.discordclient.user.id",{"_index":385,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.discordclient.ws.ping}ms",{"_index":372,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.getresponse(prompt",{"_index":90,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["this.helpservice.gethelpatindex(0",{"_index":724,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["this.helpservice.gethelpatindex(this.index",{"_index":748,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.httpservice.axiosref.post",{"_index":82,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["this.iconurl",{"_index":768,"title":{},"body":{"injectables/HelpService.html":{}}}],["this.images",{"_index":798,"title":{},"body":{"entities/Job.html":{}}}],["this.index",{"_index":747,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.jobresolver.create",{"_index":593,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.jobresolver.update(dbrecord",{"_index":490,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.jobservice.create(createjobinput",{"_index":843,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findall",{"_index":847,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findbymessageid(messageid",{"_index":852,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findone(id",{"_index":850,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.remove(id",{"_index":861,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.update",{"_index":856,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobsresolver.findonebymessageid",{"_index":391,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.jobsresolver.update(dbrecord",{"_index":681,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.lastdispatch",{"_index":247,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.logger.debug('/ai",{"_index":933,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug('cog",{"_index":473,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.logger.debug('dalle",{"_index":678,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.logger.debug('open",{"_index":938,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug(`generating",{"_index":199,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["this.logger.debug(`no",{"_index":396,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.logger.debug(`started",{"_index":692,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.logger.error",{"_index":376,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["this.logger.log",{"_index":369,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.repository.find",{"_index":881,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findone",{"_index":885,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneanddelete",{"_index":891,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneandupdate",{"_index":888,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneby",{"_index":883,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.save(createjobinput",{"_index":879,"title":{},"body":{"injectables/JobService.html":{}}}],["this.sentryservice.instance().addbreadcrumb",{"_index":196,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{}}}],["this.sentryservice.instance().captureexception(err",{"_index":493,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["this.status",{"_index":573,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["those",{"_index":1506,"title":{},"body":{"license.html":{}}}],["through",{"_index":1322,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":208,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["throws",{"_index":1285,"title":{},"body":{"index.html":{}}}],["time",{"_index":744,"title":{},"body":{"injectables/HelpInteractionCollector.html":{},"index.html":{}}}],["timeout",{"_index":245,"title":{},"body":{"injectables/AmqpService.html":{},"changelog.html":{}}}],["timepassed",{"_index":248,"title":{},"body":{"injectables/AmqpService.html":{}}}],["title",{"_index":1603,"title":{},"body":{"license.html":{}}}],["token",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tools",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":1204,"title":{},"body":{"index.html":{}}}],["top_p",{"_index":113,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["tort",{"_index":1619,"title":{},"body":{"license.html":{}}}],["tos",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["tracking",{"_index":1465,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1584,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1544,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1582,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1504,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1420,"title":{},"body":{"license.html":{}}}],["transformedcommandexecutioncontext",{"_index":434,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["transformpipe",{"_index":443,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["translation",{"_index":1421,"title":{},"body":{"license.html":{}}}],["triggering",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":254,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["try",{"_index":201,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["type",{"_index":52,"title":{},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1693,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":796,"title":{},"body":{"entities/Job.html":{},"injectables/JobService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{}}}],["typeormmodule.forfeature([job",{"_index":807,"title":{},"body":{"modules/JobModule.html":{}}}],["typeormmodule.forrootasync",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["typepaths",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":967,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{},"license.html":{}}}],["types/api/ai",{"_index":77,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/Collage.html":{}}}],["types/api/cogview2",{"_index":535,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{}}}],["types/command/help",{"_index":762,"title":{},"body":{"injectables/HelpService.html":{}}}],["types/extensions/messageattachmentwithdbrecord",{"_index":588,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["types/mongodb",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1205,"title":{},"body":{"index.html":{}}}],["typing",{"_index":1320,"title":{},"body":{"index.html":{}}}],["ugly",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["ukioye",{"_index":1133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":502,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1358,"title":{},"body":{"index.html":{},"license.html":{}}}],["union",{"_index":1385,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":151,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/JobService.html":{}}}],["unless",{"_index":1570,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1692,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1299,"title":{},"body":{"index.html":{}}}],["update",{"_index":814,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"changelog.html":{}}}],["update(@args('updatejobinput",{"_index":853,"title":{},"body":{"classes/JobResolver.html":{}}}],["update(id",{"_index":874,"title":{},"body":{"injectables/JobService.html":{}}}],["update(updatejobinput",{"_index":829,"title":{},"body":{"classes/JobResolver.html":{}}}],["updated",{"_index":857,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["updatejobinput",{"_index":830,"title":{"classes/UpdateJobInput.html":{}},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["updatejobinput._id",{"_index":855,"title":{},"body":{"classes/JobResolver.html":{}}}],["updating",{"_index":854,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["url",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpService.html":{},"index.html":{}}}],["usable",{"_index":148,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["usage",{"_index":462,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["use",{"_index":929,"title":{},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"license.html":{}}}],["usecollectors",{"_index":718,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["usecollectors(helpinteractioncollector",{"_index":723,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["usefactory",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":447,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["usepipes(transformpipe",{"_index":471,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["user",{"_index":355,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["user.send",{"_index":407,"title":{},"body":{"injectables/BotGateway.html":{}}}],["username",{"_index":1307,"title":{},"body":{"index.html":{}}}],["uses",{"_index":1200,"title":{},"body":{"index.html":{}}}],["useunifiedtopology",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":460,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["utilities/collage/collage",{"_index":589,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["utilities/utilities.module",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["utilitiesmodule",{"_index":273,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["v",{"_index":1275,"title":{},"body":{"index.html":{}}}],["value",{"_index":179,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1029,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["variable_name",{"_index":1239,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1288,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verbal",{"_index":1458,"title":{},"body":{"license.html":{}}}],["verification",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["verify",{"_index":1273,"title":{},"body":{"index.html":{}}}],["version",{"_index":1279,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["via",{"_index":1271,"title":{},"body":{"index.html":{}}}],["vibrant",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["view",{"_index":16,"title":{},"body":{"classes/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["view2",{"_index":469,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{}}}],["void",{"_index":352,"title":{},"body":{"injectables/BotGateway.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1233,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1599,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1593,"title":{},"body":{"license.html":{}}}],["wastebasket",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["watercolor",{"_index":521,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["web",{"_index":427,"title":{},"body":{"injectables/CogView2Command.html":{},"index.html":{}}}],["websocket",{"_index":378,"title":{},"body":{"injectables/BotGateway.html":{}}}],["whale",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["wherever",{"_index":1553,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1398,"title":{},"body":{"license.html":{}}}],["white_check_mark",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":1444,"title":{},"body":{"license.html":{}}}],["whutercuhler",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["width",{"_index":614,"title":{},"body":{"injectables/Collage.html":{}}}],["wih",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["windows",{"_index":1293,"title":{},"body":{"index.html":{}}}],["within",{"_index":1479,"title":{},"body":{"license.html":{}}}],["without",{"_index":1310,"title":{},"body":{"index.html":{},"license.html":{}}}],["wombodreamstyle",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wonderland",{"_index":928,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["work",{"_index":1425,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1250,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1437,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1486,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["wrench",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["writing",{"_index":1474,"title":{},"body":{"license.html":{}}}],["written",{"_index":1459,"title":{},"body":{"license.html":{}}}],["ws",{"_index":373,"title":{},"body":{"injectables/BotGateway.html":{}}}],["yaml",{"_index":1028,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["yaml_config_filename",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yamlconfigurationloader",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["yes",{"_index":139,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["zoom",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AiArtCommand.html":{"url":"classes/AiArtCommand.html","title":"class - AiArtCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AiArtCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/ai-art.command.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { CogView2Command } from './cog-view-2/cog-view-2.command';\nimport { DalleMiniCommand } from './dalle-mini/dalle-mini.command';\n\n@Command({\n  name: 'ai-art',\n  description: 'generate images based on prompt',\n  include: [DalleMiniCommand, CogView2Command],\n})\nexport class AiArtCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiArtModel.html":{"url":"injectables/AiArtModel.html","title":"injectable - AiArtModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-art/ai-art.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-art/ai-art.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:30\n                \n            \n\n\n            \n                \n                    Returns raw string array of base64 dall-e mini generated images.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt based on which to generate art.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        extracted array of base64 image strings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport { AiArtImageArray, AiArtResponse } from '../../types/api/ai-art';\n\n@Injectable()\nexport class AiArtModel {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n  ): Promise> {\n    return await this.httpService.axiosRef.post(\n      'http://bf.dallemini.ai/generate',\n      {\n        prompt,\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n    );\n  }\n\n  /**\n   * Returns raw string array of base64 dall-e mini generated images.\n   *\n   * @param prompt prompt based on which to generate art.\n   * @returns extracted array of base64 image strings\n   */\n  public async getImageArray(prompt: string): Promise {\n    const { data } = await this.getResponse(prompt);\n    return data.images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryChoices.html":{"url":"interfaces/AiStoryChoices.html","title":"interface - AiStoryChoices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryChoices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            finishReason\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            logprobs\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finishReason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finishReason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logprobs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logprobs:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AiStoryCommand.html":{"url":"classes/AiStoryCommand.html","title":"class - AiStoryCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AiStoryCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/ai-story.command.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { OpenAiCommand } from './open-ai/open-ai.command';\n\n@Command({\n  name: 'ai-story',\n  description: 'Generate random AI based story',\n  include: [OpenAiCommand],\n})\nexport class AiStoryCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryModel.html":{"url":"injectables/AiStoryModel.html","title":"injectable - AiStoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-story/ai-story.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                            \n                                    Public\n                                    Async\n                                getStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-story/ai-story.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStory(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:53\n                \n            \n\n\n            \n                \n                    Parses openAi endpoint response into more readable and usable format.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        headline of story\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        model which is to generate story\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        generated story.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport {\n  AiStoryRequest,\n  AiStoryResponse,\n  Model,\n} from '../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryModel {\n  public constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  public async getResponse(\n    prompt: string,\n    model?: Model,\n  ): Promise> {\n    const selectedModel = model || 'text-davinci-002';\n    const requestBody = {\n      model: selectedModel,\n      prompt,\n      temperature: 0.7,\n      max_tokens: 512,\n      top_p: 1,\n      best_of: 3,\n      frequency_penalty: 0.75,\n      presence_penalty: 0.33,\n    } as AiStoryRequest;\n    return this.httpService.axiosRef.post(\n      'https://api.openai.com/v1/completions',\n      requestBody,\n      {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.configService.get(\n            'openAi.token',\n          )}`,\n        },\n      },\n    );\n  }\n  /**\n   * Parses openAi endpoint response into more readable and usable format.\n   *\n   * @param prompt headline of story\n   * @param model model which is to generate story\n   * @returns generated story.\n   */\n  public async getStory(prompt: string, model?: Model) {\n    const {\n      data: { choices },\n    } = await this.getResponse(prompt, model);\n    return choices[0].text;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryRequest.html":{"url":"interfaces/AiStoryRequest.html","title":"interface - AiStoryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            best_of\n                                        \n                                \n                                \n                                        \n                                            frequency_penalty\n                                        \n                                \n                                \n                                        \n                                            max_tokens\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            presence_penalty\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                                \n                                        \n                                            top_p\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        best_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        best_of:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequency_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequency_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_tokens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_tokens:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        presence_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        presence_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_p\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_p:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryResponse.html":{"url":"interfaces/AiStoryResponse.html","title":"interface - AiStoryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            choices\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         AiStoryChoices[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AiStoryChoices[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryService.html":{"url":"injectables/AiStoryService.html","title":"injectable - AiStoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/story/ai-story/ai-story.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryModel: AiStoryModel, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryModel\n                                                  \n                                                        \n                                                                        AiStoryModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(headline: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/story/ai-story/ai-story.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headline\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AiStoryService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiStoryModel } from '../../../../models/ai-story/ai-story.model';\nimport { Model } from '../../../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryService {\n  private readonly logger = new Logger(AiStoryService.name);\n\n  public constructor(\n    private readonly aiStoryModel: AiStoryModel,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {\n    sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'debug',\n      message: 'AiStoryService service bootstrapped',\n    });\n  }\n\n  public async getArt(headline: string, model?: Model): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Service',\n      message: 'Started story generation',\n    });\n    this.logger.debug(`Generating ${headline} in style ${model}`);\n    try {\n      const response = await this.aiStoryModel.getStory(headline, model);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        message: 'Story generation finished',\n        category: 'Service',\n      });\n      return response;\n    } catch (err) {\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Service',\n        level: 'error',\n        message: `Failed to generate story ${headline}`,\n      });\n      throw new CouldNotGenerateArtException(\n        AiStoryService.name,\n        headline,\n        model as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmqpService.html":{"url":"injectables/AmqpService.html","title":"injectable - AmqpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AmqpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/amqp/amqp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastDispatch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                popFromQueue\n                            \n                            \n                                    Public\n                                    Async\n                                publishToQueue\n                            \n                            \n                                    Public\n                                    Async\n                                purgeQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(amqpClient: AmqpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/amqp/amqp.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpClient\n                                                  \n                                                        \n                                                                    AmqpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        popFromQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    popFromQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        publishToQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    publishToQueue(queueName: string, item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        purgeQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    purgeQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:16\n                \n            \n\n\n            \n                \n                    Softly purges queue.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of queue to purge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastDispatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/services/amqp/amqp.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AmqpClient, InjectAmqpClient } from '@karafra/nestjs-amqp';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AmqpService {\n  private lastDispatch: number = Date.now();\n  public constructor(\n    @InjectAmqpClient() private readonly amqpClient: AmqpClient,\n  ) {}\n\n  /**\n   * Softly purges queue.\n   *\n   * @param queueName name of queue to purge\n   */\n  public async purgeQueue(queueName: string): Promise {\n    const channel = await this.amqpClient.channel();\n    // Ensures queue is present\n    channel.queue(queueName);\n    await channel.queuePurge(queueName);\n    await channel.close('Service stopped', 320);\n  }\n\n  public async popFromQueue(queueName: string): Promise {\n    const timeout = 3000;\n    if (!(Date.now() - this.lastDispatch > timeout)) {\n      const timePassed = Date.now() - this.lastDispatch;\n      await new Promise((resolve) => setTimeout(resolve, timePassed));\n    }\n\n    const channel = await this.amqpClient.channel();\n    const queue = await channel?.queue(queueName);\n    const message = await queue?.get({ noAck: true });\n    await channel.close('Service stopped', 320);\n    return JSON.parse(message?.bodyToString() as string).data;\n  }\n\n  public async publishToQueue(queueName: string, item: T): Promise {\n    const channel = await this.amqpClient.channel();\n    const queue = await channel.queue(queueName, { autoDelete: false });\n    await queue?.publish(JSON.stringify({ data: item }), { deliveryMode: 2 });\n    channel.close('Service stopped', 320);\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommandsModule\n                        \n                        \n                            EntityModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { AmqpModule } from '@karafra/nestjs-amqp';\nimport { ApolloDriver } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SentryModule } from '@ntegral/nestjs-sentry';\nimport { Intents } from 'discord.js';\nimport { CommandsModule } from './commands/commands.module';\nimport yamlConfigurationLoader from './config/yamlConfigurationLoader';\nimport { EntityModule } from './entity/entity.module';\nimport { Job } from './entity/job/entities/job.entity';\nimport { BotGateway } from './gateway/discord/discord.gateway';\nimport { ModelsModule } from './models/models.module';\nimport { ServicesModule } from './services/services.module';\nimport { UtilitiesModule } from './utilities/utilities.module';\n@Module({\n  imports: [\n    ModelsModule,\n    ServicesModule,\n    ConfigModule.forRoot(),\n    AmqpModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        url: configService.get('amqp.url'),\n      }),\n      inject: [ConfigService],\n    }),\n    SentryModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        dsn: configService.get('sentry.dsn'),\n        logLevels: ['debug'],\n        release: configService.get('sentry.release.name'),\n        environment: 'production',\n      }),\n      inject: [ConfigService],\n    }),\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('discord.token'),\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n          ],\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mongodb',\n        auto_reconnect: true,\n        useUnifiedTopology: true,\n        entities: [Job],\n        url: configService.get('mongo.uri'),\n        logging: true,\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    GraphQLModule.forRoot({\n      driver: ApolloDriver,\n      typePaths: ['./**/*.graphql'],\n    }),\n    ConfigModule.forRoot({\n      load: [yamlConfigurationLoader],\n    }),\n    CommandsModule,\n    UtilitiesModule,\n    EntityModule,\n  ],\n  controllers: [],\n  providers: [BotGateway],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BotGateway.html":{"url":"injectables/BotGateway.html","title":"injectable - BotGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BotGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/discord/discord.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onError\n                            \n                            \n                                    Public\n                                    Async\n                                onMessageReactionAdd\n                            \n                            \n                                    Public\n                                onReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, discordClient: Client, jobsResolver: JobResolver)\n                    \n                \n                        \n                            \n                                Defined in src/gateway/discord/discord.gateway.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discordClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('error')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onMessageReactionAdd\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMessageReactionAdd(messageReaction: MessageReaction, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('messageReactionAdd')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageReaction\n                                    \n                                                MessageReaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(BotGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/gateway/discord/discord.gateway.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectDiscordClient, On, Once } from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport {\n  Client,\n  MessageActionRow,\n  MessageAttachment,\n  MessageButton,\n  MessageReaction,\n  User,\n} from 'discord.js';\nimport { JobResolver } from '../../entity/job/job.resolver';\n\n@Injectable()\nexport class BotGateway {\n  private readonly logger: Logger = new Logger(BotGateway.name);\n\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    @InjectDiscordClient()\n    private readonly discordClient: Client,\n    private readonly jobsResolver: JobResolver,\n  ) {}\n\n  @Once('ready')\n  public onReady(): void {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      message: 'Gateway connected to Discord',\n      category: 'Gateway',\n    });\n    this.logger.log(\n      `Bot connected to gateway with ping ${this.discordClient.ws.ping}ms`,\n    );\n  }\n  @On('error')\n  public onError(error: Error) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'error',\n      message: `Discord gateway WS connection failed with error ${error.message}`,\n      category: 'Gateway',\n    });\n    this.logger.error(\n      `client's WebSocket encountered a connection error: ${error}`,\n    );\n  }\n\n  @On('messageReactionAdd')\n  public async onMessageReactionAdd(\n    messageReaction: MessageReaction,\n    user: User,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Gateway',\n      message: 'reaction collected',\n    });\n    if (\n      messageReaction.emoji.identifier !== '%E2%9C%89%EF%B8%8F' ||\n      messageReaction.message.author.id !== this.discordClient.user.id\n    ) {\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        category: 'Gateway',\n        message: 'Not dispatching, reaction is non related',\n      });\n      return;\n    }\n    await messageReaction.remove();\n    const dbRecord = await this.jobsResolver.findOneByMessageId(\n      messageReaction.message.id,\n    );\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Gateway',\n      message: 'Fetched record from database',\n    });\n    if (dbRecord === null) {\n      this.logger.debug(`No record found for this image in database`);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        category: 'Gateway',\n        message: 'Record was empty, stopping execution',\n      });\n      return;\n    }\n    const { images, messageLink } = dbRecord;\n    const actionRow = new MessageActionRow().addComponents(\n      new MessageButton()\n        .setStyle('LINK')\n        .setURL(messageLink)\n        .setLabel('Jump to message '),\n    );\n    await user.send({\n      files: images.map(\n        (image) =>\n          new MessageAttachment(\n            Buffer.from(image, 'base64'),\n            String(Date.now()) + '.png',\n          ),\n      ),\n      components: [actionRow],\n    });\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Gateway',\n      message: 'Messages sent do DM successfully',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Command.html":{"url":"injectables/CogView2Command.html","title":"injectable - CogView2Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command generating art form prompt based on cog view 2 model\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobResolver: JobResolver, cogView2Service: CogView2Service, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:47\n                            \n                        \n\n                \n                    \n                            Public constructor for cog-view-2 command.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        cogView2Service\n                                                  \n                                                        \n                                                                        CogView2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling web requests to api\n\n                                                        \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling error reporting\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: CogView2CommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:67\n                \n            \n\n\n            \n                \n                    Handles command call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CogView2CommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto containing all parameters of command.\n\n                                    \n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Command.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { CogView2Service } from '../../../services/commands/art/cog-view-2/cog-view-2.service';\nimport { CogView2CommandDto } from './cog-view-2.dto';\n/**\n * Command generating art form prompt based on cog view 2 model\n *\n * @author Karafra\n * @since 1.4.5\n */\n@IncludeInHelp({\n  name: '/ai-art cog-view-2',\n  description:\n    'Generates collage of 9 images from given prompt using CogView2 model.',\n  usage:\n    '/ai-art cog-view-2 prompt: Homer Simpson in the scream by edward munch',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of images',\n    },\n    {\n      name: 'style',\n      description: 'style in which image is to be drawn',\n    },\n  ],\n})\n@SubCommand({\n  name: 'cog-view2',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class CogView2Command\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(CogView2Command.name);\n\n  /**\n   * Public constructor for cog-view-2 command.\n   *\n   * @param cogView2Service service handling web requests to api\n   * @param sentryService service handling error reporting\n   */\n  public constructor(\n    private readonly jobResolver: JobResolver,\n    private readonly cogView2Service: CogView2Service,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  /**\n   * Handles command call.\n   *\n   * @param dto dto containing all parameters of command.\n   * @param executionContext full execution context.\n   */\n  public async handler(\n    @Payload() dto: CogView2CommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('cog-view-2 command called');\n    await executionContext.interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-art cog-view-2 command called',\n    });\n    try {\n      const { attachment, dbRecord } = await this.cogView2Service.getArt(\n        dto.prompt,\n        dto.style,\n      );\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: 'cogView2 collage generated',\n      });\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      await this.jobResolver.update(dbRecord);\n      this.logger.debug('Cog-view-2 command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Cog-view-2 mini command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2CommandDto.html":{"url":"classes/CogView2CommandDto.html","title":"class - CogView2CommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2CommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for cog view2 command.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                            \n                                    Public\n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt from which generate art', type: undefined, required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Style\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Style)@Param({name: 'style', autocomplete: true, description: 'Style of art', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param, ParamType } from '@discord-nestjs/core';\n\n/**\n * Enum for style supported by cog-view-2\n *\n * @since 2.0.0\n * @author Karafra\n */\nexport enum Style {\n  NONE = 'none',\n  MAINBODY = 'mainbody',\n  PHOTO = 'photo',\n  FLAT = 'flat',\n  COMICS = 'comics',\n  OIL = 'oil',\n  SKETCH = 'sketch',\n  ISOMETRIC = 'isometric',\n  WATERCOLOR = 'watercolor',\n  CHINESE = 'chinese',\n}\n\n/**\n * DTO for cog view2 command.\n *\n * @author Karafra\n * @since 2.0.0\n */\nexport class CogView2CommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt from which generate art',\n    type: ParamType.STRING,\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n\n  @Choice(Style)\n  @Param({\n    name: 'style',\n    autocomplete: true,\n    description: 'Style of art',\n    required: false,\n  })\n  public style: Style;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Model.html":{"url":"injectables/CogView2Model.html","title":"injectable - CogView2Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cog-view-2/cog-view-2.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/cog-view-2/cog-view-2.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport {\n  CogView2Response,\n  ICogView2Request,\n  ICogView2Response,\n  ICogView2ResponseAcknowledged,\n  Style,\n} from '../../types/api/cogView2';\n\n@Injectable()\nexport class CogView2Model {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    const styleUsed: Style = style || 'mainbody';\n    let response = (await this.httpService.axiosRef.post(\n      'https://hf.space/embed/THUDM/CogView2/api/queue/push/',\n      {\n        fn_index: 0,\n        data: [\n          prompt,\n          false,\n          styleUsed,\n          Math.floor(Math.random() * (2400 - 2) + 2),\n          true,\n          9,\n        ],\n        action: 'predict',\n        session_hash: Math.random().toString(36).slice(2, 12),\n        headers: {\n          Accept: 'application/json',\n        },\n      } as ICogView2Request,\n    )) as AxiosResponse;\n    const hash = response.data.hash;\n    while (\n      (response = await this.httpService.axiosRef.post(\n        'https://hf.space/embed/THUDM/CogView2/api/queue/status/',\n        { hash },\n      )).data.status !== 'COMPLETE'\n    ) {\n      await new Promise((f) => setTimeout(f, 500));\n    }\n    return response as AxiosResponse;\n  }\n\n  public async getImageArray(\n    prompt: string,\n    style?: Style,\n  ): Promise {\n    const response = await this.getResponse(prompt, style);\n    return new CogView2Response('COMPLETE', response.data.data).getImageArray();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2Response.html":{"url":"classes/CogView2Response.html","title":"class - CogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ICogView2Response\n                            ICogView2Response\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImageArray\n                            \n                            \n                                    Public\n                                isCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(status: Status, data: ICogView2Data)\n                    \n                \n                        \n                            \n                                Defined in src/types/api/cogView2.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        Status\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ICogView2Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICogView2Data\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:38\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Service.html":{"url":"injectables/CogView2Service.html","title":"injectable - CogView2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/cog-view-2/cog-view-2.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobResolver: JobResolver, cogView2Model: CogView2Model, collage: Collage, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cogView2Model\n                                                  \n                                                        \n                                                                        CogView2Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string, style?: Style)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(CogView2Service.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Service.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { Job } from '../../../../entity/job/entities/job.entity';\nimport { JobResolver } from '../../../../entity/job/job.resolver';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { CogView2Model } from '../../../../models/cog-view-2/cog-view-2.model';\nimport { Style } from '../../../../types/api/cogView2';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\n\n@Injectable()\nexport class CogView2Service {\n  private readonly logger = new Logger(CogView2Service.name);\n\n  public constructor(\n    private readonly jobResolver: JobResolver,\n    private readonly cogView2Model: CogView2Model,\n    private readonly collage: Collage,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {\n    sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'info',\n      message: 'CogView2 service bootstrapped',\n    });\n  }\n\n  @Queued(CogView2Service.name)\n  public async getArt(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Service',\n      message: 'Started collage generation',\n    });\n    this.logger.debug(`Generating ${prompt} in style ${style}`);\n    try {\n      const response = await this.cogView2Model.getImageArray(prompt, style);\n      await this.collage.constructCollage(response);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        message: 'Image generation finished',\n        category: 'Service',\n      });\n      const attachment = this.collage.getAsAttachment();\n      const record = await this.jobResolver.create({\n        images: response,\n      });\n      return new MessageAttachmentWithDbRecord(attachment, record);\n    } catch (err) {\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Service',\n        level: 'error',\n        message: `Failed to generate art ${prompt}`,\n      });\n      throw new CouldNotGenerateArtException(\n        CogView2Service.name,\n        prompt,\n        style as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Collage.html":{"url":"injectables/Collage.html","title":"injectable - Collage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Collage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/collage/collage.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for collage of 3x3 grid.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canvas\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                constructCollage\n                            \n                            \n                                getAsAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        constructCollage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructCollage(arr: AiArtImageArray)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:29\n                \n            \n\n\n            \n                \n                    Constructs collage from array of base64 strings.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                AiArtImageArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        array of base64 strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        this class\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsAttachment\n                        \n                    \n                \n            \n            \n                \ngetAsAttachment(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:42\n                \n            \n\n\n            \n                \n                    Converts collage to discord sendable attachment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Date.now().toString()\n                                    \n\n                                    \n                                        name of collage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageAttachment\n\n                    \n                    \n                        collage as Discord sendable attachment.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport createCollage from '@settlin/collage';\nimport { MessageAttachment } from 'discord.js';\nimport { AiArtImageArray } from '../../types/api/ai-art';\n\n/**\n * Class for collage of 3x3 grid.\n *\n * @author Karafra\n * @since 1.0\n */\n@Injectable()\nexport class Collage {\n  private static readonly options: any = {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  };\n  public canvas: any;\n  /**\n   * Constructs collage from array of base64 strings.\n   *\n   * @param arr array of base64 strings\n   * @returns this class\n   */\n  public async constructCollage(arr: AiArtImageArray): Promise {\n    const options = Collage.options;\n    options.sources = arr.map((image: string) => Buffer.from(image, 'base64'));\n    this.canvas = await createCollage(options);\n    return this;\n  }\n\n  /**\n   * Converts collage to discord sendable attachment.\n   *\n   * @param name name of collage.\n   * @returns collage as Discord sendable attachment.\n   */\n  getAsAttachment(name: string = Date.now().toString()): MessageAttachment {\n    const buffer = this.canvas.toBuffer('image/png');\n    return new MessageAttachment(buffer, `${name}.png`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommandsModule.html":{"url":"modules/CommandsModule.html","title":"module - CommandsModule","body":"\n                   \n\n\n\n\n    Modules\n    CommandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommandsModule\n\n\n\ncluster_CommandsModule_imports\n\n\n\ncluster_CommandsModule_providers\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nCommandsModule\n\nCommandsModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\n\n\nCogView2Command\n\nCogView2Command\n\nCommandsModule -->\n\nCogView2Command->CommandsModule\n\n\n\n\n\nDalleMiniCommand\n\nDalleMiniCommand\n\nCommandsModule -->\n\nDalleMiniCommand->CommandsModule\n\n\n\n\n\nHelpCommand\n\nHelpCommand\n\nCommandsModule -->\n\nHelpCommand->CommandsModule\n\n\n\n\n\nOpenAiCommand\n\nOpenAiCommand\n\nCommandsModule -->\n\nOpenAiCommand->CommandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commands/commands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CogView2Command\n                        \n                        \n                            DalleMiniCommand\n                        \n                        \n                            HelpCommand\n                        \n                        \n                            OpenAiCommand\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ServicesModule } from '../services/services.module';\nimport { AiArtCommand } from './ai-art/ai-art.command';\nimport { CogView2Command } from './ai-art/cog-view-2/cog-view-2.command';\nimport { DalleMiniCommand } from './ai-art/dalle-mini/dalle-mini.command';\nimport { AiStoryCommand } from './ai-story/ai-story.command';\nimport { OpenAiCommand } from './ai-story/open-ai/open-ai.command';\nimport { HelpCommand } from './help/help.command';\n\n@Module({\n  providers: [\n    // Images\n    AiArtCommand,\n    DalleMiniCommand,\n    CogView2Command,\n    // Stories/ text based art\n    AiStoryCommand,\n    OpenAiCommand,\n    // Help\n    HelpCommand,\n  ],\n  imports: [\n    ServicesModule,\n    DiscordModule.forFeature(),\n    ConfigModule,\n    EntityModule,\n  ],\n})\nexport class CommandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CouldNotGenerateArtException.html":{"url":"classes/CouldNotGenerateArtException.html","title":"class - CouldNotGenerateArtException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CouldNotGenerateArtException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/CouldNotGenerateArtException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(serviceName: string, prompt: string, style?: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/CouldNotGenerateArtException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prompt\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CouldNotGenerateArtException extends Error {\n  public constructor(serviceName: string, prompt: string, style?: string) {\n    super(\n      `Could not generate art \"${prompt}\" based on ${serviceName}${\n        style ? ' in style \"' + style + '\"' : ''\n      }`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobInput.html":{"url":"classes/CreateJobInput.html","title":"class - CreateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/create-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                    Optional\n                                messageId\n                            \n                            \n                                    Optional\n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateJobInput {\n  _id?: string;\n  messageLink?: string;\n  messageId?: string;\n  images: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniCommand.html":{"url":"injectables/DalleMiniCommand.html","title":"injectable - DalleMiniCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobsResolver: JobResolver, dalleMiniService: DalleMiniService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dalleMiniService\n                                                  \n                                                        \n                                                                        DalleMiniService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: DalleMiniCommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                DalleMiniCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DalleMiniCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { DalleMiniService } from '../../../services/commands/art/dalle-mini/dalle-mini.service';\nimport { DalleMiniCommandDto } from './dalle-mini.dto';\n\n@IncludeInHelp({\n  name: '/ai-art dalle-mini',\n  description:\n    'Generates collage of 9 images from given prompt using Dall-E ini model.',\n  usage: '/ai-art dalle-mini prompt: Liberty leading people to freedom',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of image',\n    },\n  ],\n})\n@SubCommand({\n  name: 'dalle-mini',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class DalleMiniCommand\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(DalleMiniCommand.name);\n\n  public constructor(\n    private readonly jobsResolver: JobResolver,\n    private readonly dalleMiniService: DalleMiniService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    @Payload() dto: DalleMiniCommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('Dalle mini command called');\n    await executionContext.interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-art dalle-mini command called',\n    });\n    try {\n      const messageAttachmentWithDbRecord = await this.dalleMiniService.getArt(\n        dto.prompt,\n      );\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: 'dalle-mini collage generated',\n      });\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [messageAttachmentWithDbRecord.attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      const { dbRecord } = messageAttachmentWithDbRecord;\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      this.jobsResolver.update(dbRecord);\n      this.logger.debug('Dalle mini command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Dalle mini command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DalleMiniCommandDto.html":{"url":"classes/DalleMiniCommandDto.html","title":"class - DalleMiniCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DalleMiniCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt to generate image from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param } from '@discord-nestjs/core';\n\nexport class DalleMiniCommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt to generate image from',\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniService.html":{"url":"injectables/DalleMiniService.html","title":"injectable - DalleMiniService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/dalle-mini/dalle-mini.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobsResolver: JobResolver, collage: Collage, dalleMiniModel: AiArtModel, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dalleMiniModel\n                                                  \n                                                        \n                                                                        AiArtModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(DalleMiniService.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DalleMiniService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { Job } from '../../../../entity/job/entities/job.entity';\nimport { JobResolver } from '../../../../entity/job/job.resolver';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiArtModel } from '../../../../models/ai-art/ai-art.model';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\n\n@Injectable()\nexport class DalleMiniService {\n  private readonly logger = new Logger(DalleMiniService.name);\n  public constructor(\n    private readonly jobsResolver: JobResolver,\n    private readonly collage: Collage,\n    private readonly dalleMiniModel: AiArtModel,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  @Queued(DalleMiniService.name)\n  public async getArt(\n    prompt: string,\n  ): Promise> {\n    this.logger.debug(`Started processing art for ${prompt}`);\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'debug',\n      message: `Started processing art for ${prompt}`,\n    });\n    for (let i = 0; i  setTimeout(f, 3000));\n      }\n    }\n    this.sentryService.instance().addBreadcrumb({\n      level: 'error',\n      category: 'Service',\n      message: `Could not generate art for ${prompt}.`,\n    });\n    throw new CouldNotGenerateArtException(DalleMiniService.name, prompt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntityModule.html":{"url":"modules/EntityModule.html","title":"module - EntityModule","body":"\n                   \n\n\n\n\n    Modules\n    EntityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_imports\n\n\n\ncluster_EntityModule_exports\n\n\n\n\nJobModule\n\nJobModule\n\n\n\nEntityModule\n\nEntityModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/entity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobModule } from './job/job.module';\n\n@Module({\n  imports: [JobModule],\n  exports: [JobModule],\n})\nexport class EntityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gateway/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EntityModule } from '../entity/entity.module';\nimport { BotGateway } from './discord/discord.gateway';\n\n@Module({\n  providers: [BotGateway],\n  imports: [EntityModule],\n  exports: [BotGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpCommand.html":{"url":"injectables/HelpCommand.html","title":"injectable - HelpCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/help.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/help.command.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/help/help.command.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command, DiscordCommand, UseCollectors } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport {\n  CacheType,\n  CommandInteraction,\n  MessageActionRow,\n  MessageButton,\n} from 'discord.js';\nimport { HelpService } from '../../services/commands/help/help.service';\nimport { HelpInteractionCollector } from './collectors/help.collector';\n\n@Command({\n  name: 'help',\n  description: 'Get help',\n})\n@Injectable()\n@UseCollectors(HelpInteractionCollector)\nexport class HelpCommand implements DiscordCommand {\n  public constructor(\n    private readonly helpService: HelpService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    interaction: CommandInteraction,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Command',\n      message: '/help command called',\n    });\n    const help = this.helpService.getHelpAtIndex(0);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Command',\n      message: `help at index ${0} fetched`,\n    });\n    const row = new MessageActionRow()\n      .addComponents(\n        new MessageButton({\n          customId: 'previous',\n          label: '◀️',\n          style: 'PRIMARY',\n        }),\n      )\n      .addComponents(\n        new MessageButton({\n          customId: 'next',\n          label: '▶️',\n          style: 'PRIMARY',\n        }),\n      );\n    await interaction.reply({\n      embeds: [help],\n      components: [row],\n      ephemeral: true,\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Command',\n      level: 'info',\n      message: 'Help dispatched',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpInteractionCollector.html":{"url":"injectables/HelpInteractionCollector.html","title":"injectable - HelpInteractionCollector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpInteractionCollector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/collectors/help.collector.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                index\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onCollect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onCollect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCollect(interaction: ButtonInteraction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('collect')\n                \n            \n\n            \n                \n                    Defined in src/commands/help/collectors/help.collector.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            ButtonInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InteractionEventCollector, On } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { ButtonInteraction } from 'discord.js';\nimport { HelpService } from '../../../services/commands/help/help.service';\n\n@Injectable()\n@InteractionEventCollector({ time: 300_000 })\nexport class HelpInteractionCollector {\n  private index = 0;\n  public constructor(private readonly helpService: HelpService) {}\n\n  @On('collect')\n  public async onCollect(interaction: ButtonInteraction) {\n    if (interaction.customId === 'next') {\n      ++this.index;\n    } else if (interaction.customId === 'previous') {\n      --this.index;\n    }\n    const help = this.helpService.getHelpAtIndex(this.index);\n    await interaction.update({\n      embeds: [help],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpService.html":{"url":"injectables/HelpService.html","title":"injectable - HelpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/help/help.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                iconUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHelpAtIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHelpAtIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHelpAtIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/help/help.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageEmbed\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png'\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/help/help.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EmbedField, MessageEmbed } from 'discord.js';\nimport { __INCLUDE_IN_HELP } from '../../../decorators/includeInHelp.decorator';\nimport { ICommandHelp } from '../../../types/command/help';\n\n@Injectable()\nexport class HelpService {\n  private readonly iconUrl =\n    'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png';\n  public getHelpAtIndex(index: number): MessageEmbed {\n    const modularIndex =\n      index >= 0\n        ? index % __INCLUDE_IN_HELP.length\n        : 2 - ((2 - index) % __INCLUDE_IN_HELP.length);\n    const help = __INCLUDE_IN_HELP[modularIndex] as ICommandHelp;\n    const embed = new MessageEmbed();\n    embed.setAuthor({\n      name: 'AiArt Help',\n      iconURL: this.iconUrl,\n      url: 'https://github.com/karafra/ai-art/',\n    });\n    embed.setTitle(help.name);\n    embed.setDescription(help.description);\n    const parameterFields: EmbedField[] = [];\n    help.parameters.forEach((parameter) =>\n      parameterFields.push({\n        name: parameter.name,\n        value: parameter.optional\n          ? `${parameter.description} (Optional)`\n          : parameter.description,\n        inline: true,\n      }),\n    );\n    embed.addField('\\u200B', '**Parameters:**');\n    embed.addFields(parameterFields);\n    embed.addField('Usage', `\\`${help.usage}\\``);\n    embed.setFooter({\n      text: `Page ${modularIndex + 1}/${__INCLUDE_IN_HELP.length}`,\n    });\n    return embed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Data.html":{"url":"interfaces/ICogView2Data.html","title":"interface - ICogView2Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average_duration\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average_duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average_duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     [null, string, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [null, string, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Request.html":{"url":"interfaces/ICogView2Request.html","title":"interface - ICogView2Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            fn_index\n                                        \n                                \n                                \n                                        \n                                            session_hash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         [string, boolean, Style, number, boolean, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [string, boolean, Style, number, boolean, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fn_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fn_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Response.html":{"url":"interfaces/ICogView2Response.html","title":"interface - ICogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ICogView2Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICogView2Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2ResponseAcknowledged.html":{"url":"interfaces/ICogView2ResponseAcknowledged.html","title":"interface - ICogView2ResponseAcknowledged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2ResponseAcknowledged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandHelp.html":{"url":"interfaces/ICommandHelp.html","title":"interface - ICommandHelp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandHelp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parameters\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parameters:         ICommandParameter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICommandParameter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandParameter.html":{"url":"interfaces/ICommandParameter.html","title":"interface - ICommandParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optional\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optional:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Job.html":{"url":"entities/Job.html","title":"entity - Job","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/entities/job.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                messageId\n                            \n                            \n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ObjectIdColumn } from 'typeorm';\n\n@Entity({ name: 'Job', database: 'ai-art' })\nexport class Job {\n  @ObjectIdColumn()\n  _id: string;\n\n  @Column()\n  images: string[];\n\n  @Column()\n  messageId: string;\n\n  @Column()\n  messageLink: string;\n\n  public constructor(images: string[]) {\n    this.images = images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobModule.html":{"url":"modules/JobModule.html","title":"module - JobModule","body":"\n                   \n\n\n\n\n    Modules\n    JobModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JobModule\n\n\n\ncluster_JobModule_exports\n\n\n\ncluster_JobModule_providers\n\n\n\n\nJobResolver \n\nJobResolver \n\n\n\nJobService \n\nJobService \n\n\n\nJobModule\n\nJobModule\n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/job/job.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobResolver\n                        \n                        \n                            JobService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Job } from './entities/job.entity';\nimport { JobResolver } from './job.resolver';\nimport { JobService } from './job.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Job])],\n  providers: [JobResolver, JobService],\n  exports: [JobResolver, JobService],\n})\nexport class JobModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobResolver.html":{"url":"classes/JobResolver.html","title":"class - JobResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                findOneByMessageId\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sentryService: SentryService, jobService: JobService)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobService\n                                                  \n                                                        \n                                                                        JobService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('createJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('jobs')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOneByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByMessageId(messageId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('removeJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateJobInput: UpdateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('updateJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { JobService } from './job.service';\n\n@Resolver('Job')\nexport class JobResolver {\n  constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    private readonly jobService: JobService,\n  ) {}\n\n  @Mutation('createJob')\n  public create(@Args('createJobInput') createJobInput: CreateJobInput) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Creating job',\n    });\n    const creationPromise = this.jobService.create(createJobInput);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Created job',\n    });\n    return creationPromise;\n  }\n\n  @Query('jobs')\n  public findAll() {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Fetching all jobs',\n    });\n    const findAllPromise = this.jobService.findAll();\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Fetched all jobs',\n    });\n    return findAllPromise;\n  }\n\n  @Query('job')\n  public findOne(@Args('id') id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetching job with id ${id}`,\n    });\n    const findOnePromise = this.jobService.findOne(id);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetched job with id ${id}`,\n    });\n    return findOnePromise;\n  }\n\n  @Query('job')\n  public findOneByMessageId(messageId: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetching job with messageId ${messageId}`,\n    });\n    const findOneByMessageIdPromise =\n      this.jobService.findByMessageId(messageId);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetched job with messageId ${messageId}`,\n    });\n    return findOneByMessageIdPromise;\n  }\n\n  @Mutation('updateJob')\n  public update(@Args('updateJobInput') updateJobInput: UpdateJobInput) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Updating job with id ${updateJobInput._id}`,\n    });\n    const findOneByMessageIdPromise = this.jobService.update(\n      updateJobInput._id,\n      updateJobInput,\n    );\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Updated job with id ${updateJobInput._id}`,\n    });\n    return findOneByMessageIdPromise;\n  }\n\n  @Mutation('removeJob')\n  public remove(@Args('id') id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Removing job with id ${id}`,\n    });\n    const removePromise = this.jobService.remove(id);\n\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Removed job with id ${id}`,\n    });\n    return removePromise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobService.html":{"url":"injectables/JobService.html","title":"injectable - JobService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByMessageId\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, repository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByMessageId(messageId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobInput: UpdateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { MongoRepository } from 'typeorm';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { Job } from './entities/job.entity';\n\n@Injectable()\nexport class JobService {\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    @InjectRepository(Job)\n    private readonly repository: MongoRepository,\n  ) {}\n\n  public async create(createJobInput: CreateJobInput): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Creating job',\n    });\n    const result = await this.repository.save(createJobInput);\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Job created',\n    });\n    return result;\n  }\n\n  public async findAll(): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Finding all jobs in database',\n    });\n    const result = await this.repository.find();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Found ${result.length} jobs in database`,\n    });\n    return result;\n  }\n\n  public async findByMessageId(messageId: string) {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Finding job with messageId ${messageId} jobs in database`,\n    });\n    const result = await this.repository.findOneBy({\n      where: {\n        messageId: messageId,\n      },\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Found job with messageId ${messageId} in database`,\n    });\n    return result;\n  }\n\n  public async findOne(id: string): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Querying for job with id ${id}`,\n    });\n    const result = await this.repository.findOne({\n      where: {\n        _id: id,\n      },\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message:\n        result === null\n          ? `Haven't found any jobs with id ${id}`\n          : `Found job with id ${id}`,\n    });\n    return result;\n  }\n\n  public async update(\n    id: string,\n    updateJobInput: UpdateJobInput,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Updating job with id ${id}`,\n    });\n\n    const operation = await this.repository.findOneAndUpdate(\n      {\n        _id: id,\n      },\n      {\n        $set: updateJobInput,\n      },\n    );\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Updated job with id ${id}`,\n    });\n    return operation.value;\n  }\n\n  public async remove(id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Removing job with id ${id}`,\n    });\n    const operation = await this.repository.findOneAndDelete({\n      _id: id,\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Removed job with id ${id}`,\n    });\n    return operation.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageAttachmentWithDbRecord.html":{"url":"classes/MessageAttachmentWithDbRecord.html","title":"class - MessageAttachmentWithDbRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageAttachmentWithDbRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/extensions/MessageAttachmentWithDbRecord.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _dbRecord\n                            \n                            \n                                    Private\n                                _messageAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dbRecord\n                                \n                                \n                                    attachment\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attachment: MessageAttachment, dbRecord?: T)\n                    \n                \n                        \n                            \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attachment\n                                                  \n                                                        \n                                                                        MessageAttachment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbRecord\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _dbRecord\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _messageAttachment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageAttachment\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dbRecord\n                    \n                \n\n                \n                    \n                        getdbRecord()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:8\n                                \n                            \n\n                \n                    \n                        setdbRecord(dbRecord: T)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dbRecord\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        attachment\n                    \n                \n\n                \n                    \n                        getattachment()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:16\n                                \n                            \n\n                \n                    \n                        setattachment(attachment: MessageAttachment)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            attachment\n                                                    \n                                                            \n                                                                            MessageAttachment\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { MessageAttachment } from 'discord.js';\n\nexport class MessageAttachmentWithDbRecord {\n  private _dbRecord?: T;\n\n  private _messageAttachment: MessageAttachment;\n\n  public get dbRecord(): T {\n    return this._dbRecord;\n  }\n\n  public set dbRecord(dbRecord: T) {\n    this._dbRecord = dbRecord;\n  }\n\n  public get attachment() {\n    return this._messageAttachment;\n  }\n\n  public set attachment(attachment: MessageAttachment) {\n    this._messageAttachment = attachment;\n  }\n\n  constructor(attachment: MessageAttachment, dbRecord?: T) {\n    this._messageAttachment = attachment;\n    this._dbRecord = dbRecord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModelsModule.html":{"url":"modules/ModelsModule.html","title":"module - ModelsModule","body":"\n                   \n\n\n\n\n    Modules\n    ModelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_providers\n\n\n\n\nAiArtModel \n\nAiArtModel \n\n\n\nAiStoryModel \n\nAiStoryModel \n\n\n\nCogView2Model \n\nCogView2Model \n\n\n\nModelsModule\n\nModelsModule\n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/models.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            CogView2Model\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            CogView2Model\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AiArtModel } from './ai-art/ai-art.model';\nimport { AiStoryModel } from './ai-story/ai-story.model';\nimport { CogView2Model } from './cog-view-2/cog-view-2.model';\n\n@Module({\n  providers: [AiStoryModel, AiArtModel, CogView2Model],\n  imports: [HttpModule, ConfigModule],\n  exports: [AiArtModel, AiStoryModel, CogView2Model],\n})\nexport class ModelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenAiCommand.html":{"url":"injectables/OpenAiCommand.html","title":"injectable - OpenAiCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenAiCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryService: AiStoryService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryService\n                                                  \n                                                        \n                                                                        AiStoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: OpenAiCommandDto, undefined: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-story/open-ai/open-ai.command.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                OpenAiCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OpenAiCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { AiStoryService } from '../../../services/commands/story/ai-story/ai-story.service';\nimport { OpenAiCommandDto } from './open-ai.dto';\n\n@IncludeInHelp({\n  name: '/ai-story story',\n  description: 'Generates story from given headline',\n  usage: '/ai-story story headline: Tell me story about Alice in wonderland',\n  parameters: [\n    {\n      name: 'headline',\n      description: 'Headline of story',\n    },\n    {\n      name: 'model',\n      description: 'What model to use',\n      optional: true,\n    },\n  ],\n})\n@SubCommand({\n  name: 'open-ai',\n  description: 'Generate short story based on openAiModel of your choosing ',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class OpenAiCommand\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(OpenAiCommand.name);\n\n  public constructor(\n    private readonly aiStoryService: AiStoryService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    @Payload() dto: OpenAiCommandDto,\n    { interaction }: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('/ai-story open-ai command called');\n    await interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-story open-ai command called',\n    });\n    try {\n      const story = await this.aiStoryService.getArt(dto.headline, dto.model);\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: '/ai-story open-ai story generated',\n      });\n      await interaction.followUp(story);\n      this.logger.debug('Open-ai command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Open-ai command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await interaction.followUp(\n        `:frowning: Could not process prompt due to internal error (${err.message}). Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenAiCommandDto.html":{"url":"classes/OpenAiCommandDto.html","title":"class - OpenAiCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenAiCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'headline', description: 'Headline to generate story from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Model)@Param({name: 'model', description: 'Model to use for story generation', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param } from '@discord-nestjs/core';\n\nexport type M =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport enum Model {\n  DAVINCI = 'davinci',\n  DAVINCI_INSTRUCT_BETA = 'davinci-instruct-beta',\n  TEXT_DAVINCI_001 = 'text-davinci-001',\n  TEXT_DAVINCI_002 = 'text-davinci-002',\n  TEXT_CURIE_001 = 'text-curie-001',\n  TEXT_BABAGE_001 = 'text-babage-001',\n  TEXT_ADA_001 = 'text-ada-001',\n}\n\nexport class OpenAiCommandDto {\n  @Param({\n    name: 'headline',\n    description: 'Headline to generate story from',\n    required: true,\n    autocomplete: true,\n  })\n  public headline: string;\n\n  @Choice(Model)\n  @Param({\n    name: 'model',\n    description: 'Model to use for story generation',\n    required: true,\n    autocomplete: true,\n  })\n  public model: Model;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_imports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ModelsModule } from '../models/models.module';\nimport { UtilitiesModule } from '../utilities/utilities.module';\nimport { AmqpService } from './amqp/amqp.service';\nimport { CogView2Service } from './commands/art/cog-view-2/cog-view-2.service';\nimport { DalleMiniService } from './commands/art/dalle-mini/dalle-mini.service';\nimport { HelpService } from './commands/help/help.service';\nimport { AiStoryService } from './commands/story/ai-story/ai-story.service';\n\n@Module({\n  providers: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n  ],\n  exports: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n  ],\n  imports: [ModelsModule, UtilitiesModule, ConfigModule, EntityModule],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobInput.html":{"url":"classes/UpdateJobInput.html","title":"class - UpdateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/update-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/update-job.input.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobInput } from './create-job.input';\n\nexport class UpdateJobInput extends PartialType(CreateJobInput) {\n  declare _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCollage \n\nCollage \n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/utilities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Collage\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Collage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Collage } from './collage/collage';\n\n@Module({\n  providers: [Collage],\n  exports: [Collage],\n})\nexport class UtilitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAiArt changelog\n2.1.4 --26th July, 2022\n\n:envelope: When you add reaction \":envelope\" to any message with images bot will them to you in DM\n\n:card_file_box: Add mongo database\n\n:monocle_face: Add graphql for data exploration\n\n:whale: Update docker files\n\n:bug: Fix bug wih command scoping\n\n\n2.0.0 -- 18th July, 2022\n\n:bricks: Switched to NestJs framework\n\n:white_check_mark: Added tests\n\n:white_check_mark: Added codecov coverage reporter\n\n:white_check_mark: Added automated testing workflow\n\n:goal_net: Added support for sentry.io error reporter\n\n:whale: Fixed docked files\n\n:art: Switched documentatin generation engine to compodoc\n\n:necktie: Created custom amqp client wrapper for Nestjs\n\n:memo: Added ToS and Privacy policy files for github bot verification process\n\n:wrench: Switch configuration from .env file to yaml file with environment variable substitution\n\n\n1.6.0 -- 11t July, 2022\n\n:necktie: Fully containerized deployment \n\n:rabbit: RabbitMQ channels are now being closed automatically\n\n:rabbit: RabbitMQ connection is started before in started class.\n\n:art: Graceful shutdown\n\n\n1.5.0 -- 4th July, 2022\n\n:necktie: Added command queueing\n\n1.4.5 -- 27th June, 2022\n\n\n\n:robot: Add /help command showing all other commands\n  \n      \n  \n\n\n\n1.4.0 -- 27th June, 2022\n\n\n\n:whale: Add Dockerfile and docker-compose.yml\n\n\n\n\n\n\n:robot: Add /cog-view-2 command for generating images using CogView2 model\n\n\n\n\n\n\n:capital_abcd: Add command categorization\n  \n      \n  \n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n:loud_sound: Improve logging\n\n\n\n\n\n\n\n:wastebasket: General code cleanup\n\n\n\n1.3.0 -- 20th June, 2022\n\n* Add `/story command`\n\n\n1.2.0 -- 16th June, 2022\n\n    * Bot does not mention user when processing of command fails (produced ugly output)\n\n\n    * Bot loads commands automatically after joining guild, no need for restart anymore. \n         \n\n\n* Fix frequent timeout from dall-e mini\n\n\n* Improve code readability\n\n* Add canvas library build as it was not triggering\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^3.4.2\n        \n            @discord-nestjs/core : ^3.6.0\n        \n            @karafra/nestjs-amqp : github:karafra/nestjs-amqp\n        \n            @nestjs/apollo : ^10.0.19\n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/cli : ^8.2.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^10.0.21\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^9.0.0\n        \n            @ntegral/nestjs-sentry : ^3.0.7\n        \n            @sentry/node : ^7.6.0\n        \n            @settlin/collage : ^2.0.1\n        \n            @types/mongodb : ^4.0.7\n        \n            apollo-server-express : ^3.10.0\n        \n            axios : ^0.27.2\n        \n            discord.js : ^13.8.1\n        \n            graphql : ^15.8.0\n        \n            graphql-tools : ^8.3.0\n        \n            mongodb : ^3.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.7\n        \n            yaml-env-defaults : ^1.1.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Model   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Style   (src/.../cog-view-2.dto.ts)\n                        \n                        \n                            WomboDreamStyle   (src/.../womboDream.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Model\n                    \n                \n                        \n                            \n                                 DAVINCI\n                            \n                        \n                        \n                            \n                                Value : davinci\n                            \n                        \n                        \n                            \n                                 DAVINCI_INSTRUCT_BETA\n                            \n                        \n                        \n                            \n                                Value : davinci-instruct-beta\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_001\n                            \n                        \n                        \n                            \n                                Value : text-davinci-001\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_002\n                            \n                        \n                        \n                            \n                                Value : text-davinci-002\n                            \n                        \n                        \n                            \n                                 TEXT_CURIE_001\n                            \n                        \n                        \n                            \n                                Value : text-curie-001\n                            \n                        \n                        \n                            \n                                 TEXT_BABAGE_001\n                            \n                        \n                        \n                            \n                                Value : text-babage-001\n                            \n                        \n                        \n                            \n                                 TEXT_ADA_001\n                            \n                        \n                        \n                            \n                                Value : text-ada-001\n                            \n                        \n            \n        \n\n    src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Style\n                    \n                \n                    \n                        \n                            Enum for style supported by cog-view-2\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 MAINBODY\n                            \n                        \n                        \n                            \n                                Value : mainbody\n                            \n                        \n                        \n                            \n                                 PHOTO\n                            \n                        \n                        \n                            \n                                Value : photo\n                            \n                        \n                        \n                            \n                                 FLAT\n                            \n                        \n                        \n                            \n                                Value : flat\n                            \n                        \n                        \n                            \n                                 COMICS\n                            \n                        \n                        \n                            \n                                Value : comics\n                            \n                        \n                        \n                            \n                                 OIL\n                            \n                        \n                        \n                            \n                                Value : oil\n                            \n                        \n                        \n                            \n                                 SKETCH\n                            \n                        \n                        \n                            \n                                Value : sketch\n                            \n                        \n                        \n                            \n                                 ISOMETRIC\n                            \n                        \n                        \n                            \n                                Value : isometric\n                            \n                        \n                        \n                            \n                                 WATERCOLOR\n                            \n                        \n                        \n                            \n                                Value : watercolor\n                            \n                        \n                        \n                            \n                                 CHINESE\n                            \n                        \n                        \n                            \n                                Value : chinese\n                            \n                        \n            \n        \n\n    src/types/api/womboDream.ts\n    \n        \n            \n                \n                    \n                        \n                        WomboDreamStyle\n                    \n                \n                        \n                            \n                                 SYNTHWAVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UKIOYE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 NO_STYLE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 STEAMPUNK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 FANTASY_ART\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 VIBRANT\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 HD\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 PASTEL\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 PSYCHIC\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 DARK_FANTASY\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 MYSTICAL\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 FESTIVE\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 BAROQUE\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 ETCHING\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 S_DALI\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n                        \n                            \n                                 WHUTERCUHLER\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n                        \n                            \n                                 PROVENANCE\n                            \n                        \n                        \n                            \n                                Value : 17\n                            \n                        \n                        \n                            \n                                 ROSEGOLD\n                            \n                        \n                        \n                            \n                                Value : 18\n                            \n                        \n                        \n                            \n                                 MOONWALKER\n                            \n                        \n                        \n                            \n                                Value : 19\n                            \n                        \n                        \n                            \n                                 BLACKLIGHT\n                            \n                        \n                        \n                            \n                                Value : 20\n                            \n                        \n                        \n                            \n                                 PSYCHEDELIC\n                            \n                        \n                        \n                            \n                                Value : 21\n                            \n                        \n                        \n                            \n                                 GHIBIL\n                            \n                        \n                        \n                            \n                                Value : 22\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IncludeInHelp   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            Queued   (src/.../queued.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IncludeInHelp\n                        \n                    \n                \n            \n            \n                \nIncludeInHelp(help: ICommandHelp)\n                \n            \n\n\n\n\n            \n                \n                    Tells bot to include given command in help\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    help\n                                    \n                                                ICommandHelp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Queued\n                        \n                    \n                \n            \n            \n                \nQueued(queueName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\nAI Art\n\n  \n    Discord bot generating AI art collages\n    \n    Explore the docs »\n    \n    \n    View Demo\n    ·\n    Report Bug\n    ·\n    Request Feature\n  \n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        Installation\n      \n    \n    Deployment\n    Usage\n    Contributing\n    License\n    Contact\n    Acknowledgments\n  \n\n\n\n\nAbout The Project\n\n\n  \n\n\nSimple discord bot which generates collages based on any query you give it (most of the time). This bot uses model which you can find here\n(back to top)\n\nBuilt With\n\nTypescript\nDiscord.js\nCollage\nCanvas\namqp-client.js\nSentry.io\nJest\nCodecov\nDocker\nNestJs\nCompodoc\nMongo\nTypeORM\nGraphQl\n\n(back to top)\n\n\n\nGetting Started\nPrerequisites\nThis is an example of how to list things you need to use the software and how to install them.\n\nnpmnpm install npm@latest -g\n\nInstallation\n\nCreate Discord application on a free API Key at https://discord.com/developers/\n\nClick on Bot tab and save your token.\n\nClone the repo\ngit clone https://github.com/karafra/ai-art.git\nInstall NPM packages\nnpm install\nEnter your API key and bot id into config.yml. \nsentry:\n  dsn: \"{SENTRY_DSN}\"\n# This one is optional ... only if you want to use ai-story command\nopenAi:\n  token: ...\namqp:\n  url: \"{AMQP_URL}\"\ndiscord:\n    token: \"{DISCORD_TOKEN}\"\ndeploy:\n  port: \"{PORT}\" Configuration file supports simple environment variable substitution in format \"{VARIABLE_NAME}\", where parentheses are required.\n\n\n(back to top)\n\n\n\nDeployment\nMethod 1: Deployment to Heroku\nRecommended method of deploying this bot is deployment on Heroku. To deploy to Heroku please click on button bellow.\n\n\n  \n\n\n\nIMPORTANT\nAfter successful deployment you will have to switch dyno from web to worker. If you do not do this, app will not bind to port and fail. \n\n  \n\n\nAfter successful deployment you can invite bot to your server by clicking on this link https://discord.com/api/oauth2/authorize?client_id={CLIENT_ID}&permissions=34816&scope=applications.commands%20bot, where CLIENT_ID is your bots client id. Link already contains minimal scopes (bot, application.commands) and minimal bot permissions (send messages, attach files)\nMethod 2: Containerized deployment:\nAnother even easier method of deployment is deployment via docker container.\n\nVerify docker-compose installation\n A] Type docker-compose -v into terminal. if output looks similar to docker-compose version 1.29.2, build 5becea4c then you can continue to the next step.\n B] If this command throws an error, you have to follow docker-compose installation guide\n\nSet required variables\n\nOnly required variables is TOKEN, this can be set as environment variables using export ENV_NAME=VALUE on linux based OS or $env:VARIABLE_NAME=VALUE on Windows based OS\n\n\nBuilding Docker containers\n\n\n\nType docker-compose -f \"docker/deploy/docker-compose.yml\" build into terminal, this will automatically build all required docker images.\n\n\nStart container\nType docker-compose -f \"docker/deploy/docker-compose.yml\" up into terminal. This will start all services needed. RabbitMQ management console will be accessible here with login credentials being:\n\nusername:   \nguest\n\n\npassword:\nguest\n\n\n\n\nMongoDb management console will be accessible here without any login credentials\n\n\n\n\nThis network is not external, so it will not be accessible from outside.\n(back to top)\n\n\n\nUsage\nCommands are separated into 2 command groups\n\n/ai-art\n\ncog-view-2 - Generates collage of 9 images using CogView2 model\ndalle-mini - Generates collage of 9 images using Dall-e mini model\n\n\n/ai-story\n\nstory - Generates story from given headline (Requires OpenAi API) token\n\n\nReact with :envelope: to any collage and bot will dm it to you.\n\n\nDiscord offers autocompletion so all you need is to start typing name of the command or group in which command is, discord will then guide you through all the required parameters using its autocompletion.\n\n  \n\n\nFor more examples, please refer to the Documentation\n(back to top)\n\n\n\nContributing\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\nDon't forget to give the project a star! Thanks again!\n\nFork the Project\nCreate your Feature Branch (git checkout -b feature/AmazingFeature)\nCommit your Changes (git commit -m 'Add some AmazingFeature')\nPush to the Branch (git push origin feature/AmazingFeature)\nOpen a Pull Request\n\n(back to top)\n\n\n\nLicense\nDistributed under the Apache2.0 License. See LICENSE for more information.\n(back to top)\n\n\n\nContact\nYour Name - @Karafro - dariusKralovic@protonmail.com\nProject Link: https://github.com/karafra/ai-art\n(back to top)\n\n\n\nAcknowledgments\n\nDALL·E Mini\nImage generation model for /ai-art dalle-mini\n\n\nCogView2\nImage generation model for /ai-art cog-view-2\n\n\nOpen Ai\nStory generation model for /ai-story story\n\n\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2022 Karafra\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommandsModule\n\n\n\ncluster_CommandsModule_providers\n\n\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_imports\n\n\n\ncluster_EntityModule_exports\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_JobModule\n\n\n\ncluster_JobModule_exports\n\n\n\ncluster_JobModule_providers\n\n\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nAiArtModel \n\nAiArtModel \n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\n\n\nAiStoryModel \n\nAiStoryModel \n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\n\n\nCogView2Model \n\nCogView2Model \n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCollage \n\nCollage \n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\nCogView2Command\n\nCogView2Command\n\nCommandsModule -->\n\nCogView2Command->CommandsModule\n\n\n\n\n\nDalleMiniCommand\n\nDalleMiniCommand\n\nCommandsModule -->\n\nDalleMiniCommand->CommandsModule\n\n\n\n\n\nHelpCommand\n\nHelpCommand\n\nCommandsModule -->\n\nHelpCommand->CommandsModule\n\n\n\n\n\nOpenAiCommand\n\nOpenAiCommand\n\nCommandsModule -->\n\nOpenAiCommand->CommandsModule\n\n\n\n\n\nJobModule\n\nJobModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobResolver \n\nJobResolver \n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\n\n\nJobService \n\nJobService \n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.5\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../cogView2.ts)\n                        \n                        \n                            AiArtImageArray   (src/.../ai-art.ts)\n                        \n                        \n                            AiArtResponse   (src/.../ai-art.ts)\n                        \n                        \n                            M   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Model   (src/.../ai-story.ts)\n                        \n                        \n                            Status   (src/.../cogView2.ts)\n                        \n                        \n                            Style   (src/.../cogView2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/api/cogView2.ts\n    \n    \n        \n            \n                \n                    \n                    ActionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                            \"COMPLETE\" | \"PENDING\" | \"QUEUED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Style\n                \n            \n            \n                \n                        \"none\" | \"mainbody\" | \"photo\" | \"flat\" | \"comics\" | \"oil\" | \"sketch\" | \"isometric\" | \"watercolor\" | \"chinese\"\n\n                \n            \n        \n    \n    src/types/api/ai-art.ts\n    \n    \n        \n            \n                \n                    \n                    AiArtImageArray\n                \n            \n            \n                \n                        [string, string, string, string, string, string, string, string, string]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AiArtResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n    \n        \n            \n                \n                    \n                    M\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n    src/types/api/ai-story.ts\n    \n    \n        \n            \n                \n                    \n                    Model\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __INCLUDE_IN_HELP   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            getEnvVarValue   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            purgedQueues   (src/.../queued.decorator.ts)\n                        \n                        \n                            replaceEnvVars   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../yamlConfigurationLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __INCLUDE_IN_HELP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICommandHelp[]\n\n                    \n                \n                \n                    \n                        Default value : [] as ICommandHelp[]\n                    \n                \n\n\n        \n    \n\n    src/config/yamlConfigurationLoader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvVarValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (value: string): string | undefined => {\n  const paramsPattern = /{(.*?)}/;\n  const param = String(value).match(paramsPattern);\n  if (param !== null) {\n    return process.env[param[1]];\n  }\n  return null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceEnvVars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: any): void => {\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'object') {\n      const value = getEnvVarValue(obj[key]);\n      if (value !== null) {\n        obj[key] = value;\n      }\n    }\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      replaceEnvVars(obj[key]);\n    }\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        YAML_CONFIG_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'config.yml'\n                    \n                \n\n\n        \n    \n\n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        purgedQueues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [] as string[]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
